{
  "version": 3,
  "sources": ["../../../node_modules/svg4everybody/dist/svg4everybody.js", "../../../assets/scripts/utils/grid-helper.js", "../../../node_modules/modujs/dist/main.esm.js", "../../../assets/scripts/modules.js", "../../../assets/scripts/config.js", "../../../assets/scripts/utils/fonts.js", "../../../assets/scripts/modules/Example.js", "../../../node_modules/modularload/dist/main.esm.js", "../../../assets/scripts/utils/html.js", "../../../assets/scripts/utils/image.js", "../../../assets/scripts/modules/Load.js", "../../../node_modules/@studio-freight/lenis/src/maths.js", "../../../node_modules/@studio-freight/lenis/src/animate.js", "../../../node_modules/@studio-freight/lenis/src/debounce.js", "../../../node_modules/@studio-freight/lenis/src/dimensions.js", "../../../node_modules/@studio-freight/lenis/src/nanoevents.js", "../../../node_modules/@studio-freight/lenis/src/virtual-scroll.js", "../../../node_modules/@studio-freight/lenis/src/index.js", "../../../node_modules/locomotive-scroll/src/core/IO.ts", "../../../node_modules/locomotive-scroll/src/utils/maths.ts", "../../../node_modules/locomotive-scroll/src/core/ScrollElement.ts", "../../../node_modules/locomotive-scroll/src/core/Core.ts", "../../../node_modules/locomotive-scroll/src/core/RO.ts", "../../../node_modules/locomotive-scroll/src/index.ts", "../../../assets/scripts/modules/Scroll.js", "../../../assets/scripts/globals.js", "../../../assets/scripts/utils/tickers.js", "../../../assets/scripts/utils/dom.js", "../../../assets/scripts/app.js"],
  "sourcesContent": ["!function(root, factory) {\n    \"function\" == typeof define && define.amd ? // AMD. Register as an anonymous module unless amdModuleId is set\n    define([], function() {\n        return root.svg4everybody = factory();\n    }) : \"object\" == typeof module && module.exports ? // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory() : root.svg4everybody = factory();\n}(this, function() {\n    /*! svg4everybody v2.1.9 | github.com/jonathantneal/svg4everybody */\n    function embed(parent, svg, target) {\n        // if the target exists\n        if (target) {\n            // create a document fragment to hold the contents of the target\n            var fragment = document.createDocumentFragment(), viewBox = !svg.hasAttribute(\"viewBox\") && target.getAttribute(\"viewBox\");\n            // conditionally set the viewBox on the svg\n            viewBox && svg.setAttribute(\"viewBox\", viewBox);\n            // copy the contents of the clone into the fragment\n            for (// clone the target\n            var clone = target.cloneNode(!0); clone.childNodes.length; ) {\n                fragment.appendChild(clone.firstChild);\n            }\n            // append the fragment into the svg\n            parent.appendChild(fragment);\n        }\n    }\n    function loadreadystatechange(xhr) {\n        // listen to changes in the request\n        xhr.onreadystatechange = function() {\n            // if the request is ready\n            if (4 === xhr.readyState) {\n                // get the cached html document\n                var cachedDocument = xhr._cachedDocument;\n                // ensure the cached html document based on the xhr response\n                cachedDocument || (cachedDocument = xhr._cachedDocument = document.implementation.createHTMLDocument(\"\"), \n                cachedDocument.body.innerHTML = xhr.responseText, xhr._cachedTarget = {}), // clear the xhr embeds list and embed each item\n                xhr._embeds.splice(0).map(function(item) {\n                    // get the cached target\n                    var target = xhr._cachedTarget[item.id];\n                    // ensure the cached target\n                    target || (target = xhr._cachedTarget[item.id] = cachedDocument.getElementById(item.id)), \n                    // embed the target into the svg\n                    embed(item.parent, item.svg, target);\n                });\n            }\n        }, // test the ready state change immediately\n        xhr.onreadystatechange();\n    }\n    function svg4everybody(rawopts) {\n        function oninterval() {\n            // while the index exists in the live <use> collection\n            for (// get the cached <use> index\n            var index = 0; index < uses.length; ) {\n                // get the current <use>\n                var use = uses[index], parent = use.parentNode, svg = getSVGAncestor(parent), src = use.getAttribute(\"xlink:href\") || use.getAttribute(\"href\");\n                if (!src && opts.attributeName && (src = use.getAttribute(opts.attributeName)), \n                svg && src) {\n                    if (polyfill) {\n                        if (!opts.validate || opts.validate(src, svg, use)) {\n                            // remove the <use> element\n                            parent.removeChild(use);\n                            // parse the src and get the url and id\n                            var srcSplit = src.split(\"#\"), url = srcSplit.shift(), id = srcSplit.join(\"#\");\n                            // if the link is external\n                            if (url.length) {\n                                // get the cached xhr request\n                                var xhr = requests[url];\n                                // ensure the xhr request exists\n                                xhr || (xhr = requests[url] = new XMLHttpRequest(), xhr.open(\"GET\", url), xhr.send(), \n                                xhr._embeds = []), // add the svg and id as an item to the xhr embeds list\n                                xhr._embeds.push({\n                                    parent: parent,\n                                    svg: svg,\n                                    id: id\n                                }), // prepare the xhr ready state change event\n                                loadreadystatechange(xhr);\n                            } else {\n                                // embed the local id into the svg\n                                embed(parent, svg, document.getElementById(id));\n                            }\n                        } else {\n                            // increase the index when the previous value was not \"valid\"\n                            ++index, ++numberOfSvgUseElementsToBypass;\n                        }\n                    }\n                } else {\n                    // increase the index when the previous value was not \"valid\"\n                    ++index;\n                }\n            }\n            // continue the interval\n            (!uses.length || uses.length - numberOfSvgUseElementsToBypass > 0) && requestAnimationFrame(oninterval, 67);\n        }\n        var polyfill, opts = Object(rawopts), newerIEUA = /\\bTrident\\/[567]\\b|\\bMSIE (?:9|10)\\.0\\b/, webkitUA = /\\bAppleWebKit\\/(\\d+)\\b/, olderEdgeUA = /\\bEdge\\/12\\.(\\d+)\\b/, edgeUA = /\\bEdge\\/.(\\d+)\\b/, inIframe = window.top !== window.self;\n        polyfill = \"polyfill\" in opts ? opts.polyfill : newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537 || edgeUA.test(navigator.userAgent) && inIframe;\n        // create xhr requests object\n        var requests = {}, requestAnimationFrame = window.requestAnimationFrame || setTimeout, uses = document.getElementsByTagName(\"use\"), numberOfSvgUseElementsToBypass = 0;\n        // conditionally start the interval if the polyfill is active\n        polyfill && oninterval();\n    }\n    function getSVGAncestor(node) {\n        for (var svg = node; \"svg\" !== svg.nodeName.toLowerCase() && (svg = svg.parentNode); ) {}\n        return svg;\n    }\n    return svg4everybody;\n});", "/**\n * Grid Helper\n *\n * Provides a grid based on the design guidelines and is helpful for web integration.\n *\n * - `Control + g` to toggle the grid\n *\n */\n\n/**\n * @typedef {Object} GridHelperReference\n *\n * @property {string} [gutterCssVar=GRID_HELPER_GUTTER_CSS_VAR] - CSS variable used to define grid gutters.\n * @property {string} [marginCssVar=GRID_HELPER_MARGIN_CSS_VAR] - CSS variable used to define grid margins.\n * @property {string} [rgbaColor=GRID_HELPER_RGBA_COLOR]        - RGBA color for the grid appearence.\n */\n\nconst GRID_HELPER_GUTTER_CSS_VAR = '--grid-gutter';\nconst GRID_HELPER_MARGIN_CSS_VAR = '--grid-margin';\nconst GRID_HELPER_RGBA_COLOR = 'rgba(255, 0, 0, .1)';\n\n/**\n * Create a grid helper\n *\n * @param {GridHelperReference}\n *\n */\nfunction gridHelper({\n    gutterCssVar = GRID_HELPER_GUTTER_CSS_VAR,\n    marginCssVar = GRID_HELPER_MARGIN_CSS_VAR,\n    rgbaColor = GRID_HELPER_RGBA_COLOR,\n} = {}) {\n    // Set grid container\n    const $gridContainer = document.createElement('div');\n    document.body.append($gridContainer);\n\n    // Set grid appearence\n    setGridHelperColumns($gridContainer, rgbaColor);\n    setGridHelperStyles($gridContainer, gutterCssVar, marginCssVar);\n\n    // Set grid interactivity\n    setGridEvents($gridContainer, rgbaColor);\n}\n\n/**\n * Set grid container styles\n *\n * @param {HTMLElement} $container - DOM Element that contains a list of generated columns\n * @param {string} gutterCssVar    - CSS variable used to define grid gutters.\n * @param {string} marginCssVar    - CSS variable used to define grid margins.\n *\n */\nfunction setGridHelperStyles($container, gutterCssVar, marginCssVar) {\n    const elStyles = $container.style;\n    elStyles.zIndex = '10000';\n    elStyles.position = 'fixed';\n    elStyles.top = '0';\n    elStyles.left = '0';\n    elStyles.display = 'flex';\n    elStyles.width = '100%';\n    elStyles.height = '100%';\n    elStyles.columnGap = `var(${gutterCssVar}, 0)`;\n    elStyles.paddingLeft = `var(${marginCssVar}, 0)`;\n    elStyles.paddingRight = `var(${marginCssVar}, 0)`;\n    elStyles.pointerEvents = 'none';\n    elStyles.visibility = 'hidden';\n}\n\n/**\n * Set grid columns\n *\n * @param {HTMLElement} $container - DOM Element that will contain a list of generated columns\n * @param {string} rgbaColor       - RGBA color to stylize the generated columns\n *\n */\nfunction setGridHelperColumns($container, rgbaColor) {\n    // Clear columns\n    $container.innerHTML = '';\n\n    // Loop through columns\n    const columns = Number(\n        window.getComputedStyle($container).getPropertyValue('--grid-columns')\n    );\n\n    let $col;\n    for (var i = 0; i < columns; i++) {\n        $col = document.createElement('div');\n        $col.style.flex = '1 1 0';\n        $col.style.backgroundColor = rgbaColor;\n        $container.appendChild($col);\n    }\n}\n\n/**\n * Set grid events\n *\n * Resize to rebuild columns\n * Keydown/Keyup to toggle the grid display\n *\n * @param {HTMLElement} $container - DOM Element that contains a list of generated columns\n * @param {string} rgbaColor       - RGBA color to stylize the generated columns\n *\n */\nfunction setGridEvents($container, rgbaColor) {\n    // Handle resize\n    window.addEventListener(\n        'resize',\n        setGridHelperColumns($container, rgbaColor)\n    );\n\n    // Toggle grid\n    let ctrlDown = false;\n    let isActive = false;\n\n    document.addEventListener('keydown', (e) => {\n        if (e.key == 'Control') {\n            ctrlDown = true;\n        } else {\n            if (ctrlDown && e.key == 'g') {\n                if (isActive) {\n                    $container.style.visibility = 'hidden';\n                } else {\n                    $container.style.visibility = 'visible';\n                }\n\n                isActive = !isActive;\n            }\n        }\n    });\n\n    document.addEventListener('keyup', (e) => {\n        if (e.key == 'Control') {\n            ctrlDown = false;\n        }\n    });\n}\n\nexport { gridHelper };\n", "function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar _default = /*#__PURE__*/function () {\n  function _default(options) {\n    _classCallCheck(this, _default);\n\n    this.mAttr = 'data-' + options.dataName;\n    this.mCaptureEvents = ['mouseenter', 'mouseleave'];\n    this.el = options.el;\n  }\n\n  _createClass(_default, [{\n    key: \"mInit\",\n    value: function mInit(modules) {\n      var _this = this;\n\n      this.modules = modules;\n      this.mCheckEventTarget = this.mCheckEventTarget.bind(this);\n\n      if (this.events) {\n        Object.keys(this.events).forEach(function (event) {\n          return _this.mAddEvent(event);\n        });\n      }\n    }\n  }, {\n    key: \"mUpdate\",\n    value: function mUpdate(modules) {\n      this.modules = modules;\n    }\n  }, {\n    key: \"mDestroy\",\n    value: function mDestroy() {\n      var _this2 = this;\n\n      if (this.events) {\n        Object.keys(this.events).forEach(function (event) {\n          return _this2.mRemoveEvent(event);\n        });\n      }\n    }\n  }, {\n    key: \"mAddEvent\",\n    value: function mAddEvent(event) {\n      var capture = this.mCaptureEvents.includes(event) ? true : false;\n      this.el.addEventListener(event, this.mCheckEventTarget, capture);\n    }\n  }, {\n    key: \"mRemoveEvent\",\n    value: function mRemoveEvent(event) {\n      var capture = this.mCaptureEvents.includes(event) ? true : false;\n      this.el.removeEventListener(event, this.mCheckEventTarget, capture);\n    }\n  }, {\n    key: \"mCheckEventTarget\",\n    value: function mCheckEventTarget(e) {\n      var event = this.events[e.type];\n\n      if (typeof event === \"string\") {\n        this[event](e);\n      } else {\n        var data = '[' + this.mAttr + ']';\n        var target = e.target;\n\n        if (this.mCaptureEvents.includes(e.type)) {\n          if (target.matches(data)) {\n            this.mCallEventMethod(e, event, target);\n          }\n        } else {\n          while (target && target !== document) {\n            if (target.matches(data)) {\n              if (this.mCallEventMethod(e, event, target) != 'undefined') {\n                break;\n              }\n            }\n\n            target = target.parentNode;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"mCallEventMethod\",\n    value: function mCallEventMethod(e, event, target) {\n      var name = target.getAttribute(this.mAttr);\n\n      if (event.hasOwnProperty(name)) {\n        var method = event[name];\n\n        if (!e.hasOwnProperty('currentTarget')) {\n          Object.defineProperty(e, 'currentTarget', {\n            value: target\n          });\n        }\n\n        if (!e.hasOwnProperty('curTarget')) {\n          Object.defineProperty(e, 'curTarget', {\n            value: target\n          }); // For IE 11\n        }\n\n        this[method](e);\n      }\n    }\n  }, {\n    key: \"$\",\n    value: function $(query, context) {\n      var classIndex = query.indexOf('.');\n      var idIndex = query.indexOf('#');\n      var attrIndex = query.indexOf('[');\n      var indexes = [classIndex, idIndex, attrIndex].filter(function (index) {\n        return index != -1;\n      });\n      var index = false;\n      var name = query;\n      var more = '';\n      var parent = this.el;\n\n      if (indexes.length) {\n        index = Math.min.apply(Math, _toConsumableArray(indexes));\n        name = query.slice(0, index);\n        more = query.slice(index);\n      }\n\n      if (_typeof(context) == 'object') {\n        parent = context;\n      }\n\n      return parent.querySelectorAll('[' + this.mAttr + '=' + name + ']' + more);\n    }\n  }, {\n    key: \"parent\",\n    value: function parent(query, context) {\n      var data = '[' + this.mAttr + '=' + query + ']';\n      var parent = context.parentNode;\n\n      while (parent && parent !== document) {\n        if (parent.matches(data)) {\n          return parent;\n        }\n\n        parent = parent.parentNode;\n      }\n    }\n  }, {\n    key: \"getData\",\n    value: function getData(name, context) {\n      var target = context || this.el;\n      return target.getAttribute(this.mAttr + '-' + name);\n    }\n  }, {\n    key: \"setData\",\n    value: function setData(name, value, context) {\n      var target = context || this.el;\n      return target.setAttribute(this.mAttr + '-' + name, value);\n    }\n  }, {\n    key: \"call\",\n    value: function call(func, args, mod, id) {\n      var _this3 = this;\n\n      if (args && !mod) {\n        mod = args;\n        args = false;\n      }\n\n      if (this.modules[mod]) {\n        if (id) {\n          if (this.modules[mod][id]) {\n            this.modules[mod][id][func](args);\n          }\n        } else {\n          Object.keys(this.modules[mod]).forEach(function (id) {\n            _this3.modules[mod][id][func](args);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"on\",\n    value: function on(e, mod, func, id) {\n      var _this4 = this;\n\n      if (this.modules[mod]) {\n        if (id) {\n          this.modules[mod][id].el.addEventListener(e, function (o) {\n            return func(o);\n          });\n        } else {\n          Object.keys(this.modules[mod]).forEach(function (i) {\n            _this4.modules[mod][i].el.addEventListener(e, function (o) {\n              return func(o);\n            });\n          });\n        }\n      }\n    }\n  }, {\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"destroy\",\n    value: function destroy() {}\n  }]);\n\n  return _default;\n}();\n\nvar _default$1 = /*#__PURE__*/function () {\n  function _default(options) {\n    _classCallCheck(this, _default);\n\n    this.app;\n    this.modules = options.modules;\n    this.currentModules = {};\n    this.activeModules = {};\n    this.newModules = {};\n    this.moduleId = 0;\n  }\n\n  _createClass(_default, [{\n    key: \"init\",\n    value: function init(app, scope) {\n      var _this = this;\n\n      var container = scope || document;\n      var elements = container.querySelectorAll('*');\n\n      if (app && !this.app) {\n        this.app = app;\n      }\n\n      this.activeModules['app'] = {\n        'app': this.app\n      };\n      elements.forEach(function (el) {\n        Array.from(el.attributes).forEach(function (i) {\n          if (i.name.startsWith('data-module')) {\n            var moduleExists = false;\n            var dataName = i.name.split('-').splice(2);\n\n            var moduleName = _this.toCamel(dataName);\n\n            if (_this.modules[moduleName]) {\n              moduleExists = true;\n            } else if (_this.modules[_this.toUpper(moduleName)]) {\n              moduleName = _this.toUpper(moduleName);\n              moduleExists = true;\n            }\n\n            if (moduleExists) {\n              var options = {\n                el: el,\n                name: moduleName,\n                dataName: dataName.join('-')\n              };\n              var module = new _this.modules[moduleName](options);\n              var id = i.value;\n\n              if (!id) {\n                _this.moduleId++;\n                id = 'm' + _this.moduleId;\n                el.setAttribute(i.name, id);\n              }\n\n              _this.addActiveModule(moduleName, id, module);\n\n              var moduleId = moduleName + '-' + id;\n\n              if (scope) {\n                _this.newModules[moduleId] = module;\n              } else {\n                _this.currentModules[moduleId] = module;\n              }\n            }\n          }\n        });\n      });\n      Object.entries(this.currentModules).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            id = _ref2[0],\n            module = _ref2[1];\n\n        if (scope) {\n          var split = id.split('-');\n          var moduleName = split.shift();\n          var moduleId = split.pop();\n\n          _this.addActiveModule(moduleName, moduleId, module);\n        } else {\n          _this.initModule(module);\n        }\n      });\n    }\n  }, {\n    key: \"initModule\",\n    value: function initModule(module) {\n      module.mInit(this.activeModules);\n      module.init();\n    }\n  }, {\n    key: \"addActiveModule\",\n    value: function addActiveModule(name, id, module) {\n      if (this.activeModules[name]) {\n        Object.assign(this.activeModules[name], _defineProperty({}, id, module));\n      } else {\n        this.activeModules[name] = _defineProperty({}, id, module);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(scope) {\n      var _this2 = this;\n\n      this.init(this.app, scope);\n      Object.entries(this.currentModules).forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            id = _ref4[0],\n            module = _ref4[1];\n\n        module.mUpdate(_this2.activeModules);\n      });\n      Object.entries(this.newModules).forEach(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            id = _ref6[0],\n            module = _ref6[1];\n\n        _this2.initModule(module);\n      });\n      Object.assign(this.currentModules, this.newModules);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(scope) {\n      if (scope) {\n        this.destroyScope(scope);\n      } else {\n        this.destroyModules();\n      }\n    }\n  }, {\n    key: \"destroyScope\",\n    value: function destroyScope(scope) {\n      var _this3 = this;\n\n      var elements = scope.querySelectorAll('*');\n      elements.forEach(function (el) {\n        Array.from(el.attributes).forEach(function (i) {\n          if (i.name.startsWith('data-module')) {\n            var id = i.value;\n            var dataName = i.name.split('-').splice(2);\n            var moduleName = _this3.toCamel(dataName) + '-' + id;\n            var moduleExists = false;\n\n            if (_this3.currentModules[moduleName]) {\n              moduleExists = true;\n            } else if (_this3.currentModules[_this3.toUpper(moduleName)]) {\n              moduleName = _this3.toUpper(moduleName);\n              moduleExists = true;\n            }\n\n            if (moduleExists) {\n              _this3.destroyModule(_this3.currentModules[moduleName]);\n\n              delete _this3.currentModules[moduleName];\n            }\n          }\n        });\n      });\n      this.activeModules = {};\n      this.newModules = {};\n    }\n  }, {\n    key: \"destroyModules\",\n    value: function destroyModules() {\n      var _this4 = this;\n\n      Object.entries(this.currentModules).forEach(function (_ref7) {\n        var _ref8 = _slicedToArray(_ref7, 2),\n            id = _ref8[0],\n            module = _ref8[1];\n\n        _this4.destroyModule(module);\n      });\n      this.currentModules = [];\n    }\n  }, {\n    key: \"destroyModule\",\n    value: function destroyModule(module) {\n      module.mDestroy();\n      module.destroy();\n    }\n  }, {\n    key: \"toCamel\",\n    value: function toCamel(arr) {\n      var _this5 = this;\n\n      return arr.reduce(function (a, b) {\n        return a + _this5.toUpper(b);\n      });\n    }\n  }, {\n    key: \"toUpper\",\n    value: function toUpper(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n  }]);\n\n  return _default;\n}();\n\nexport default _default$1;\nexport { _default as module };\n", "export {default as Example} from './modules/Example';\nexport {default as Load} from './modules/Load';\nexport {default as Scroll} from './modules/Scroll';\n", "/**\n * > When using the esBuild API, all `process.env.NODE_ENV` expressions\n * > are automatically defined to `\"production\"` if all minification\n * > options are enabled and `\"development\"` otherwise. This only happens\n * > if `process`, `process.env`, and `process.env.NODE_ENV` are not already\n * > defined. This substitution is necessary to avoid code crashing instantly\n * > (since `process` is a Node API, not a web API).\n * > \u2014 https://esbuild.github.io/api/#platform\n */\n\nconst NODE_ENV = process.env.NODE_ENV\nconst IS_DESKTOP = typeof window.orientation === 'undefined'\n\n// Main environment variables\nconst ENV = Object.freeze({\n    // Node environment\n    NAME: NODE_ENV,\n    IS_PROD: NODE_ENV === 'production',\n    IS_DEV: NODE_ENV === 'development',\n\n    // Device\n    IS_DESKTOP,\n    IS_MOBILE: !IS_DESKTOP,\n})\n\n// Main CSS classes used within the project\nconst CSS_CLASS = Object.freeze({\n    LOADING: 'is-loading',\n    LOADED: 'is-loaded',\n    READY: 'is-ready',\n    FONTS_LOADED: 'fonts-loaded',\n    IMAGE: \"c-image\",\n    IMAGE_LAZY_LOADED: \"-lazy-loaded\",\n    IMAGE_LAZY_LOADING: \"-lazy-loading\",\n    IMAGE_LAZY_ERROR: \"-lazy-error\",\n})\n\n// Custom js events\nconst CUSTOM_EVENT = Object.freeze({\n    RESIZE_END: 'loco.resizeEnd',\n    // ...\n})\n\n// Fonts parameters\nconst FONT = Object.freeze({\n    EAGER: [\n        { family: 'Source Sans', style: 'normal', weight: 400 },\n        { family: 'Source Sans', style: 'normal', weight: 700 },\n    ],\n})\n\nexport {\n    ENV,\n    CSS_CLASS,\n    CUSTOM_EVENT,\n    FONT,\n}\n", "/**\n * Font Faces\n *\n * Provides utilities to facilitate interactions with the CSS Font Loading API.\n *\n * Features functions to:\n *\n * - Retrieve one or more `FontFace` instances based on a font search query.\n * - Check if a `FontFace` instance matches a font search query.\n * - Eagerly load fonts that match a font search query.\n * - Wait until fonts that match a font search query are loaded.\n *\n * References:\n *\n * - {@link https://developer.mozilla.org/en-US/docs/Web/API/CSS_Font_Loading_API}\n */\n\n/**\n * @typedef {Object} FontFaceReference\n *\n * @property {string} family   - The name used to identify the font in our CSS.\n * @property {string} [style]  - The style used by the font in our CSS.\n * @property {string} [weight] - The weight used by the font in our CSS.\n */\n\nconst isFontLoadingAPIAvailable = ('fonts' in document);\n\n/**\n * Determines if the given font matches the given `FontFaceReference`.\n *\n * @param {FontFace}          font      - The font to inspect.\n * @param {FontFaceReference} criterion - The object of property values to match.\n *\n * @returns {boolean}\n */\nfunction conformsToReference(font, criterion)\n{\n    for (const [ key, value ] of Object.entries(criterion)) {\n        switch (key) {\n            case 'family': {\n                if (trim(font[key]) !== value) {\n                    return false;\n                }\n                break;\n            }\n\n            case 'weight': {\n                /**\n                 * Note concerning font weights:\n                 * Loose equality (`==`) is used to compare numeric weights,\n                 * a number (`400`) and a numeric string (`\"400\"`).\n                 * Comparison between numeric and keyword values is neglected.\n                 *\n                 * @link https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#common_weight_name_mapping\n                 */\n                if (font[key] != value) {\n                    return false;\n                }\n                break;\n            }\n\n            default: {\n                if (font[key] !== value) {\n                    return false;\n                }\n                break;\n            }\n        }\n    }\n\n    return true;\n}\n\n/**\n * Determines if the given font matches the given font shorthand.\n *\n * @param {FontFace} font      - The font to inspect.\n * @param {string}   criterion - The font shorthand to match.\n *\n * @returns {boolean}\n */\nfunction conformsToShorthand(font, criterion)\n{\n    const family = trim(font.family);\n\n    if (trim(family) === criterion) {\n        return true;\n    }\n\n    if (\n        criterion.endsWith(trim(family)) && (\n            criterion.match(font.weight) ||\n            criterion.match(font.style)\n        )\n    ) {\n        return true;\n    }\n\n    return true;\n}\n\n/**\n * Determines if the given font matches any of the given criteria.\n *\n * @param {FontFace}            font     - The font to inspect.\n * @param {FontFaceReference[]} criteria - A list of objects with property values to match.\n *\n * @returns {boolean}\n */\nfunction conformsToAnyReference(font, criteria)\n{\n    for (const criterion of criteria) {\n        if (conformsToReference(font, criterion)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/**\n * Returns an iterator of all `FontFace` from `document.fonts` that satisfy\n * the provided `FontFaceReference`.\n *\n * @param {FontFaceReference} font\n *\n * @returns {FontFace[]}\n */\nfunction findManyByReference(search)\n{\n    const found = [];\n\n    for (const font of document.fonts) {\n        if (conformsToReference(font, search)) {\n            found.push(font);\n        }\n    }\n\n    return found;\n}\n\n/**\n * Returns an iterator of all `FontFace` from `document.fonts` that satisfy\n * the provided font shorthand.\n *\n * @param {string} font\n *\n * @returns {FontFace[]}\n */\nfunction findManyByShorthand(search)\n{\n    const found = [];\n\n    for (const font of document.fonts) {\n        if (conformsToShorthand(font, search)) {\n            found.push(font);\n        }\n    }\n\n    return found;\n}\n\n/**\n * Returns the first `FontFace` from `document.fonts` that satisfies\n * the provided `FontFaceReference`.\n *\n * @param {FontFaceReference} font\n *\n * @returns {?FontFace}\n */\nfunction findOneByReference(search)\n{\n    for (const font of document.fonts) {\n        if (conformsToReference(font, criterion)) {\n            return font;\n        }\n    }\n\n    return null;\n}\n\n/**\n * Returns the first `FontFace` from `document.fonts` that satisfies\n * the provided font shorthand.\n *\n * Examples:\n *\n * - \"Roboto\"\n * - \"italic bold 16px Roboto\"\n *\n * @param {string} font\n *\n * @returns {?FontFace}\n */\nfunction findOneByShorthand(search)\n{\n    for (const font of document.fonts) {\n        if (conformsToShorthand(font, search)) {\n            return font;\n        }\n    }\n\n    return null;\n}\n\n/**\n * Returns a `FontFace` from `document.fonts` that satisfies\n * the provided query.\n *\n * @param {FontFaceReference|string} font - Either:\n *     - a `FontFaceReference` object\n *     - a font family name\n *     - a font specification, for example \"italic bold 16px Roboto\"\n *\n * @returns {?FontFace}\n *\n * @throws {TypeError}\n */\nfunction getAny(search) {\n    if (search) {\n        switch (typeof search) {\n            case 'string':\n                return findOneByShorthand(search);\n\n            case 'object':\n                return findOneByReference(search);\n        }\n    }\n\n    throw new TypeError(\n        'Expected font query to be font shorthand or font reference'\n    );\n}\n\n/**\n * Returns an iterator of all `FontFace` from `document.fonts` that satisfy\n * the provided queries.\n *\n * @param {FontFaceReference|string|(FontFaceReference|string)[]} queries\n *\n * @returns {FontFace[]}\n *\n * @throws {TypeError}\n */\nfunction getMany(queries) {\n    if (!Array.isArray(queries)) {\n        queries = [ queries ];\n    }\n\n    const found = new Set();\n\n    queries.forEach((search) => {\n        if (search) {\n            switch (typeof search) {\n                case 'string':\n                    found.add(...findManyByShorthand(search));\n                    return;\n\n                case 'object':\n                    found.add(...findManyByReference(search));\n                    return;\n            }\n        }\n\n        throw new TypeError(\n            'Expected font query to be font shorthand or font reference'\n        );\n    })\n\n    return [ ...found ];\n}\n\n/**\n * Determines if a font face is registered.\n *\n * @param {FontFace|FontFaceReference|string} search - Either:\n *     - a `FontFace` instance\n *     - a `FontFaceReference` object\n *     - a font family name\n *     - a font specification, for example \"italic bold 16px Roboto\"\n *\n * @returns {boolean}\n */\nfunction hasAny(search) {\n    if (search instanceof FontFace) {\n        return document.fonts.has(search);\n    }\n\n    return getAny(search) != null;\n}\n\n/**\n * Eagerly load fonts.\n *\n * Most user agents only fetch and load fonts when they are first needed\n * (\"lazy loaded\"), which can result in a perceptible delay.\n *\n * This function will \"eager load\" the fonts.\n *\n * @param {(FontFace|FontFaceReference)[]} fontsToLoad - List of fonts to load.\n * @param {boolean}             [debug]     - If TRUE, log details to the console.\n *\n * @returns {Promise}\n */\nasync function loadFonts(fontsToLoad, debug = false)\n{\n    if ((fontsToLoad.size ?? fontsToLoad.length) === 0) {\n        throw new TypeError(\n            'Expected at least one font'\n        );\n    }\n\n    return await loadFontsWithAPI([ ...fontsToLoad ], debug);\n}\n\n/**\n * Eagerly load a font using `FontFaceSet` API.\n *\n * @param {FontFace} font\n *\n * @returns {Promise}\n */\nasync function loadFontFaceWithAPI(font)\n{\n    return await (font.status === 'unloaded'\n        ? font.load()\n        : font.loaded\n    ).then((font) => font, (err) => font)\n}\n\n/**\n * Eagerly load fonts using `FontFaceSet` API.\n *\n * @param {FontFaceReference[]} fontsToLoad\n * @param {boolean}             [debug]\n *\n * @returns {Promise}\n */\nasync function loadFontsWithAPI(fontsToLoad, debug = false)\n{\n    debug && console.group('[loadFonts:API]', fontsToLoad.length, '/', document.fonts.size);\n\n    const fontsToBeLoaded = [];\n\n    for (const fontToLoad of fontsToLoad) {\n        if (fontToLoad instanceof FontFace) {\n            if (!document.fonts.has(fontToLoad)) {\n                document.fonts.add(fontToLoad);\n            }\n\n            fontsToBeLoaded.push(\n                loadFontFaceWithAPI(fontToLoad)\n            );\n        } else {\n            fontsToBeLoaded.push(\n                ...getMany(fontToLoad).map((font) => loadFontFaceWithAPI(font))\n            );\n        }\n    }\n\n    debug && console.groupEnd();\n\n    return await Promise.all(fontsToBeLoaded);\n}\n\n/**\n * Removes quotes from the the string.\n *\n * When a `@font-face` is declared, the font family is sometimes\n * defined in quotes which end up included in the `FontFace` instance.\n *\n * @param {string} value\n *\n * @returns {string}\n */\nfunction trim(value) {\n    return value.replace(/['\"]+/g, '');\n}\n\n/**\n * Returns a Promise that resolves with the specified fonts\n * when they are done loading or failed.\n *\n * @param {FontFaceReference|string|(FontFaceReference|string)[]} queries\n *\n * @returns {Promise}\n */\nasync function whenReady(queries)\n{\n    const fonts = getMany(queries);\n\n    return await Promise.all(fonts.map((font) => font.loaded));\n}\n\nexport {\n    getAny,\n    getMany,\n    hasAny,\n    isFontLoadingAPIAvailable,\n    loadFonts,\n    whenReady,\n}\n", "import { module } from 'modujs';\nimport { FONT } from '../config';\nimport { whenReady } from '../utils/fonts';\n\nexport default class extends module {\n    constructor(m) {\n        super(m);\n    }\n\n    init() {\n        whenReady(FONT.EAGER).then((fonts) => this.onFontsLoaded(fonts));\n    }\n\n    onFontsLoaded(fonts) {\n        console.log('Example: Eager Fonts Loaded!', fonts)\n    }\n}\n", "function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar _default = /*#__PURE__*/function () {\n  function _default(options) {\n    _classCallCheck(this, _default);\n\n    this.defaults = {\n      name: 'load',\n      loadingClass: 'is-loading',\n      loadedClass: 'is-loaded',\n      readyClass: 'is-ready',\n      transitionsPrefix: 'is-',\n      transitionsHistory: true,\n      enterDelay: 0,\n      exitDelay: 0,\n      loadedDelay: 0,\n      isLoaded: false,\n      isEntered: false,\n      isUrl: false,\n      transitionContainer: null,\n      popstateIgnore: false\n    };\n    Object.assign(this, this.defaults, options);\n    this.options = options;\n    this.namespace = 'modular';\n    this.html = document.documentElement;\n    this.href = window.location.href;\n    this.container = 'data-' + this.name + '-container';\n    this.subContainer = false;\n    this.prevTransition = null;\n    this.loadAttributes = ['src', 'srcset', 'style', 'href'];\n    this.isInserted = false;\n    this.isLoading = false;\n    this.enterTimeout = false;\n    this.controller = new AbortController();\n    this.classContainer = this.html;\n    this.isChrome = navigator.userAgent.indexOf(\"Chrome\") != -1 ? true : false;\n    this.init();\n  }\n\n  _createClass(_default, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      window.addEventListener('popstate', function (e) {\n        return _this.checkState(e);\n      }, false);\n      this.html.addEventListener('click', function (e) {\n        return _this.checkClick(e);\n      }, false);\n      this.loadEls(document);\n    }\n  }, {\n    key: \"checkClick\",\n    value: function checkClick(e) {\n      if (!e.ctrlKey && !e.metaKey) {\n        var target = e.target;\n\n        while (target && target !== document) {\n          if (target.matches('a') && target.getAttribute('download') == null) {\n            var href = target.getAttribute('href');\n\n            if (!href.startsWith('#') && !href.startsWith('mailto:') && !href.startsWith('tel:')) {\n              e.preventDefault();\n              this.reset();\n              this.getClickOptions(target);\n            }\n\n            break;\n          }\n\n          target = target.parentNode;\n        }\n      }\n    }\n  }, {\n    key: \"checkState\",\n    value: function checkState() {\n      if (typeof this.popstateIgnore === 'string' && window.location.href.indexOf(this.popstateIgnore) > -1) {\n        return;\n      }\n\n      this.reset();\n      this.getStateOptions();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.isLoading) {\n        this.controller.abort();\n        this.isLoading = false;\n        this.controller = new AbortController();\n      }\n\n      window.clearTimeout(this.enterTimeout);\n\n      if (this.isInserted) {\n        this.removeContainer();\n      }\n\n      this.classContainer = this.html;\n      Object.assign(this, this.defaults, this.options);\n    }\n  }, {\n    key: \"getClickOptions\",\n    value: function getClickOptions(link) {\n      this.transition = link.getAttribute('data-' + this.name);\n      this.isUrl = link.getAttribute('data-' + this.name + '-url');\n      var href = link.getAttribute('href');\n      var target = link.getAttribute('target');\n\n      if (target == '_blank') {\n        window.open(href, '_blank');\n        return;\n      }\n\n      if (this.transition == 'false') {\n        window.location = href;\n        return;\n      }\n\n      this.setOptions(href, true);\n    }\n  }, {\n    key: \"getStateOptions\",\n    value: function getStateOptions() {\n      if (this.transitionsHistory) {\n        this.transition = history.state;\n      } else {\n        this.transition = false;\n      }\n\n      var href = window.location.href;\n      this.setOptions(href);\n    }\n  }, {\n    key: \"goTo\",\n    value: function goTo(href, transition, isUrl) {\n      this.reset();\n      this.transition = transition;\n      this.isUrl = isUrl;\n      this.setOptions(href, true);\n    }\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(href, push) {\n      var container = '[' + this.container + ']';\n      var oldContainer;\n\n      if (this.transition && this.transition != 'true') {\n        this.transitionContainer = '[' + this.container + '=\"' + this.transition + '\"]';\n        this.loadingClass = this.transitions[this.transition].loadingClass || this.loadingClass;\n        this.loadedClass = this.transitions[this.transition].loadedClass || this.loadedClass;\n        this.readyClass = this.transitions[this.transition].readyClass || this.readyClass;\n        this.transitionsPrefix = this.transitions[this.transition].transitionsPrefix || this.transitionsPrefix;\n        this.enterDelay = this.transitions[this.transition].enterDelay || this.enterDelay;\n        this.exitDelay = this.transitions[this.transition].exitDelay || this.exitDelay;\n        this.loadedDelay = this.transitions[this.transition].loadedDelay || this.loadedDelay;\n        oldContainer = document.querySelector(this.transitionContainer);\n      }\n\n      if (oldContainer) {\n        container = this.transitionContainer;\n        this.oldContainer = oldContainer;\n        this.classContainer = this.oldContainer.parentNode;\n\n        if (!this.subContainer) {\n          history.replaceState(this.transition, null, this.href);\n        }\n\n        this.subContainer = true;\n      } else {\n        this.oldContainer = document.querySelector(container);\n\n        if (this.subContainer) {\n          history.replaceState(this.prevTransition, null, this.href);\n        }\n\n        this.subContainer = false;\n      }\n\n      this.href = href;\n      this.parentContainer = this.oldContainer.parentNode;\n\n      if (this.isUrl === '' || this.isUrl != null && this.isUrl != 'false' && this.isUrl != false) {\n        history.pushState(this.transition, null, href);\n      } else {\n        this.oldContainer.classList.add('is-old');\n        this.setLoading();\n        this.startEnterDelay();\n        this.loadHref(href, container, push);\n      }\n    }\n  }, {\n    key: \"setLoading\",\n    value: function setLoading() {\n      this.classContainer.classList.remove(this.loadedClass, this.readyClass);\n      this.classContainer.classList.add(this.loadingClass);\n      this.classContainer.classList.remove(this.transitionsPrefix + this.prevTransition);\n\n      if (this.transition) {\n        this.classContainer.classList.add(this.transitionsPrefix + this.transition);\n      }\n\n      if (!this.subContainer) {\n        this.prevTransition = this.transition;\n      }\n\n      var loadingEvent = new Event(this.namespace + 'loading');\n      window.dispatchEvent(loadingEvent);\n    }\n  }, {\n    key: \"startEnterDelay\",\n    value: function startEnterDelay() {\n      var _this2 = this;\n\n      this.enterTimeout = window.setTimeout(function () {\n        _this2.isEntered = true;\n\n        if (_this2.isLoaded) {\n          _this2.transitionContainers();\n        }\n      }, this.enterDelay);\n    }\n  }, {\n    key: \"loadHref\",\n    value: function loadHref(href, container, push) {\n      var _this3 = this;\n\n      this.isLoading = true;\n      var signal = this.controller.signal;\n      fetch(href, {\n        signal: signal\n      }).then(function (response) {\n        return response.text();\n      }).then(function (data) {\n        if (push) {\n          history.pushState(_this3.transition, null, href);\n        }\n\n        var parser = new DOMParser();\n        _this3.data = parser.parseFromString(data, 'text/html');\n        _this3.newContainer = _this3.data.querySelector(container);\n\n        _this3.newContainer.classList.add('is-new');\n\n        _this3.parentNewContainer = _this3.newContainer.parentNode;\n\n        _this3.hideContainer();\n\n        _this3.parentContainer.insertBefore(_this3.newContainer, _this3.oldContainer);\n\n        _this3.isInserted = true;\n\n        _this3.setSvgs();\n\n        _this3.isLoaded = true;\n\n        if (_this3.isEntered) {\n          _this3.transitionContainers();\n        }\n\n        _this3.loadEls(_this3.newContainer);\n\n        _this3.isLoading = false;\n      })[\"catch\"](function (err) {\n        window.location = href;\n      });\n    }\n  }, {\n    key: \"transitionContainers\",\n    value: function transitionContainers() {\n      var _this4 = this;\n\n      this.setAttributes();\n      this.showContainer();\n      this.setLoaded();\n      setTimeout(function () {\n        _this4.removeContainer();\n\n        _this4.setReady();\n      }, this.exitDelay);\n    }\n  }, {\n    key: \"setSvgs\",\n    value: function setSvgs() {\n      if (this.isChrome) {\n        var svgs = this.newContainer.querySelectorAll('use');\n\n        if (svgs.length) {\n          svgs.forEach(function (svg) {\n            var xhref = svg.getAttribute('xlink:href');\n\n            if (xhref) {\n              svg.parentNode.innerHTML = '<use xlink:href=\"' + xhref + '\"></use>';\n            } else {\n              var href = svg.getAttribute('href');\n              if (href) svg.parentNode.innerHTML = '<use href=\"' + href + '\"></use>';\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"setAttributes\",\n    value: function setAttributes() {\n      var _this5 = this;\n\n      var title = this.data.getElementsByTagName('title')[0];\n      var newDesc = this.data.head.querySelector('meta[name=\"description\"]');\n      var oldDesc = document.head.querySelector('meta[name=\"description\"]');\n      var container;\n      var newContainer;\n\n      if (this.subContainer) {\n        newContainer = this.parentNewContainer;\n        container = document.querySelector(this.transitionContainer).parentNode;\n      } else {\n        newContainer = this.data.querySelector('html');\n        container = document.querySelector('html');\n      }\n\n      var datas = Object.assign({}, newContainer.dataset);\n      if (title) document.title = title.innerText;\n      if (oldDesc && newDesc) oldDesc.setAttribute('content', newDesc.getAttribute('content'));\n\n      if (datas) {\n        Object.entries(datas).forEach(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              key = _ref2[0],\n              val = _ref2[1];\n\n          container.setAttribute('data-' + _this5.toDash(key), val);\n        });\n      }\n    }\n  }, {\n    key: \"toDash\",\n    value: function toDash(str) {\n      return str.split(/(?=[A-Z])/).join('-').toLowerCase();\n    }\n  }, {\n    key: \"hideContainer\",\n    value: function hideContainer() {\n      this.newContainer.style.visibility = 'hidden';\n      this.newContainer.style.height = 0;\n      this.newContainer.style.overflow = 'hidden';\n    }\n  }, {\n    key: \"showContainer\",\n    value: function showContainer() {\n      this.newContainer.style.visibility = '';\n      this.newContainer.style.height = '';\n      this.newContainer.style.overflow = '';\n    }\n  }, {\n    key: \"loadEls\",\n    value: function loadEls(container) {\n      var _this6 = this;\n\n      var promises = [];\n      this.loadAttributes.forEach(function (attr) {\n        var data = 'data-' + _this6.name + '-' + attr;\n        var els = container.querySelectorAll('[' + data + ']');\n\n        if (els.length) {\n          els.forEach(function (el) {\n            var elData = el.getAttribute(data);\n            el.setAttribute(attr, elData);\n\n            if (attr == 'src' || attr == 'srcset') {\n              var promise = new Promise(function (resolve) {\n                el.onload = function () {\n                  return resolve(el);\n                };\n              });\n              promises.push(promise);\n            }\n          });\n        }\n      });\n      Promise.all(promises).then(function (val) {\n        var imagesEvent = new Event(_this6.namespace + 'images');\n        window.dispatchEvent(imagesEvent);\n      });\n    }\n  }, {\n    key: \"setLoaded\",\n    value: function setLoaded() {\n      var _this7 = this;\n\n      this.classContainer.classList.remove(this.loadingClass);\n      setTimeout(function () {\n        _this7.classContainer.classList.add(_this7.loadedClass);\n      }, this.loadedDelay);\n      var loadedEvent = new Event(this.namespace + 'loaded');\n      window.dispatchEvent(loadedEvent);\n    }\n  }, {\n    key: \"removeContainer\",\n    value: function removeContainer() {\n      this.parentContainer.removeChild(this.oldContainer);\n      this.newContainer.classList.remove('is-new');\n      this.isInserted = false;\n    }\n  }, {\n    key: \"setReady\",\n    value: function setReady() {\n      this.classContainer.classList.add(this.readyClass);\n      var readyEvent = new Event(this.namespace + 'ready');\n      window.dispatchEvent(readyEvent);\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, func) {\n      var _this8 = this;\n\n      window.addEventListener(this.namespace + event, function () {\n        switch (event) {\n          case 'loading':\n            return func(_this8.transition, _this8.oldContainer);\n\n          case 'loaded':\n            return func(_this8.transition, _this8.oldContainer, _this8.newContainer);\n\n          case 'ready':\n            return func(_this8.transition, _this8.newContainer);\n\n          default:\n            return func();\n        }\n      }, false);\n    }\n  }]);\n\n  return _default;\n}();\n\nexport default _default;\n", "/**\n * Escape HTML string\n * @param {string}  str   - string to escape\n * @return {string} escaped string\n */\n\nconst escapeHtml = (str) =>\n    str.replace(\n        /[&<>'\"]/g,\n        (tag) =>\n            ({\n                \"&\": \"&amp;\",\n                \"<\": \"&lt;\",\n                \">\": \"&gt;\",\n                \"'\": \"&#39;\",\n                '\"': \"&quot;\",\n            }[tag])\n    );\n\n/**\n * Unescape HTML string\n * @param {string}  str   - string to unescape\n * @return {string} unescaped string\n */\n\nconst unescapeHtml = (str) =>\n    str\n        .replace(\"&amp;\", \"&\")\n        .replace(\"&lt;\", \"<\")\n        .replace(\"&gt;\", \">\")\n        .replace(\"&#39;\", \"'\")\n        .replace(\"&quot;\", '\"');\n\n/**\n * Get element data attributes\n * @param {HTMLElement}  node   - node element\n * @return {array}       node data\n */\n\nconst getNodeData = (node) => {\n    // All attributes\n    const attributes = node.attributes;\n\n    // Regex Pattern\n    const pattern = /^data\\-(.+)$/;\n\n    // Output\n    const data = {};\n\n    for (let i in attributes) {\n        if (!attributes[i]) {\n            continue;\n        }\n\n        // Attributes name (ex: data-module)\n        let name = attributes[i].name;\n\n        // This happens.\n        if (!name) {\n            continue;\n        }\n\n        let match = name.match(pattern);\n        if (!match) {\n            continue;\n        }\n\n        // If this throws an error, you have some\n        // serious problems in your HTML.\n        data[match[1]] = getData(node.getAttribute(name));\n    }\n\n    return data;\n};\n\n/**\n * Parse value to data type.\n *\n * @link   https://github.com/jquery/jquery/blob/3.1.1/src/data.js\n * @param  {string} data - value to convert\n * @return {mixed}  value in its natural data type\n */\n\nconst rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/;\nconst getData = (data) => {\n    if (data === \"true\") {\n        return true;\n    }\n\n    if (data === \"false\") {\n        return false;\n    }\n\n    if (data === \"null\") {\n        return null;\n    }\n\n    // Only convert to a number if it doesn't change the string\n    if (data === +data + \"\") {\n        return +data;\n    }\n\n    if (rbrace.test(data)) {\n        return JSON.parse(data);\n    }\n\n    return data;\n};\n\n/**\n * Returns an array containing all the parent nodes of the given node\n * @param  {HTMLElement}    $el     - DOM Element\n * @return {array}          parent nodes\n */\n\nconst getParents = ($el) => {\n    // Set up a parent array\n    let parents = [];\n\n    // Push each parent element to the array\n    for (; $el && $el !== document; $el = $el.parentNode) {\n        parents.push($el);\n    }\n\n    // Return our parent array\n    return parents;\n};\n\n// https://gomakethings.com/how-to-get-the-closest-parent-element-with-a-matching-selector-using-vanilla-javascript/\nconst queryClosestParent = ($el, selector) => {\n    // Element.matches() polyfill\n    if (!Element.prototype.matches) {\n        Element.prototype.matches =\n            Element.prototype.matchesSelector ||\n            Element.prototype.mozMatchesSelector ||\n            Element.prototype.msMatchesSelector ||\n            Element.prototype.oMatchesSelector ||\n            Element.prototype.webkitMatchesSelector ||\n            function (s) {\n                var matches = (\n                        this.document || this.ownerDocument\n                    ).querySelectorAll(s),\n                    i = matches.length;\n                while (--i >= 0 && matches.item(i) !== this) {}\n                return i > -1;\n            };\n    }\n\n    // Get the closest matching element\n    for (; $el && $el !== document; $el = $el.parentNode) {\n        if ($el.matches(selector)) return $el;\n    }\n    return null;\n};\n\nexport {\n    escapeHtml,\n    unescapeHtml,\n    getNodeData,\n    getData,\n    getParents,\n    queryClosestParent,\n};\n", "import { CSS_CLASS } from '../config'\nimport { queryClosestParent } from './html'\n\n/**\n * Get an image meta data\n *\n * @param {HTMLImageElement}    $img   - The image element.\n * @return {object}             The given image meta data\n */\n\nconst getImageMetadata = $img => ({\n    url: $img.src,\n    width: $img.naturalWidth,\n    height: $img.naturalHeight,\n    ratio: $img.naturalWidth / $img.naturalHeight,\n})\n\n\n/**\n * Load the given image.\n *\n * @param {string}  url         - The URI to lazy load into $el.\n * @param {object}  options     - An object of options\n * @return {void}\n */\n\nconst loadImage = (url, options = {}) => {\n    return new Promise((resolve, reject) => {\n        const $img = new Image()\n\n        if (options.crossOrigin) {\n            $img.crossOrigin = options.crossOrigin\n        }\n\n        const loadCallback = () => {\n            resolve({\n                element: $img,\n                ...getImageMetadata($img),\n            })\n        }\n\n        if($img.decode) {\n            $img.src = url\n            $img.decode().then(loadCallback).catch(e => {\n                reject(e)\n            })\n        } else {\n            $img.onload = loadCallback\n            $img.onerror = (e) => {\n                reject(e)\n            }\n            $img.src = url\n        }\n    })\n}\n\n\n/**\n * Lazy load the given image.\n *\n * @param {HTMLImageElement}    $el      - The image element.\n * @param {?string}             url      - The URI to lazy load into $el.\n *     If falsey, the value of the `data-src` attribute on $el will be used as the URI.\n * @param {?function}           callback - A function to call when the image is loaded.\n * @return {void}\n */\n\nconst LAZY_LOADED_IMAGES = []\nconst lazyLoadImage = async ($el, url, callback) => {\n    let src = url ? url : $el.dataset.src\n\n    let loadedImage = LAZY_LOADED_IMAGES.find(image => image.url === src)\n\n    if (!loadedImage) {\n        loadedImage = await loadImage(src)\n\n        if (!loadedImage.url) {\n            return\n        }\n\n        LAZY_LOADED_IMAGES.push(loadedImage)\n    }\n\n    if($el.src === src) {\n        return\n    }\n\n    if ($el.tagName === 'IMG') {\n        $el.src = loadedImage.url\n    } else {\n        $el.style.backgroundImage = `url(${loadedImage.url})`\n    }\n\n    requestAnimationFrame(() => {\n        let lazyParent = $el.closest(`.${CSS_CLASS.IMAGE}`)\n\n        if(lazyParent) {\n            lazyParent.classList.add(CSS_CLASS.IMAGE_LAZY_LOADED)\n            lazyParent.style.backgroundImage = ''\n        }\n\n        $el.classList.add(CSS_CLASS.IMAGE_LAZY_LOADED)\n\n        callback?.()\n    })\n}\n\n/**\n * Lazyload Callbacks\n *\n */\nconst lazyImageLoad = (e) => {\n    const $img = e.currentTarget;\n    const $parent = queryClosestParent($img, `.${CSS_CLASS.IMAGE}`);\n\n    requestAnimationFrame(() => {\n        if ($parent) {\n            $parent.classList.remove(CSS_CLASS.IMAGE_LAZY_LOADING);\n            $parent.classList.add(CSS_CLASS.IMAGE_LAZY_LOADED);\n        }\n\n        $img.classList.add(CSS_CLASS.IMAGE_LAZY_LOADED);\n    });\n};\n\nconst lazyImageError = (e) => {\n    const $img = e.currentTarget;\n    const $parent = queryClosestParent($img, `.${CSS_CLASS.IMAGE}`);\n\n    requestAnimationFrame(() => {\n        if ($parent) {\n            $parent.classList.remove(CSS_CLASS.IMAGE_LAZY_LOADING);\n            $parent.classList.add(CSS_CLASS.IMAGE_LAZY_ERROR);\n        }\n    });\n};\n\n/* Trigger Lazyload Callbacks */\nconst triggerLazyloadCallbacks = ($lazyImagesArgs) => {\n    const $lazyImages = $lazyImagesArgs\n        ? $lazyImagesArgs\n        : document.querySelectorAll('[loading=\"lazy\"]');\n\n    if (\"loading\" in HTMLImageElement.prototype) {\n        for (const $img of $lazyImages) {\n            const $parent = queryClosestParent(\n                $img,\n                `.${CSS_CLASS.IMAGE}`\n            );\n\n\n            if (!$img.complete) {\n                if($parent) {\n                    $parent.classList.add(\n                        CSS_CLASS.IMAGE_LAZY_LOADING\n                    );\n                }\n\n                $img.addEventListener(\"load\", lazyImageLoad, { once: true });\n                $img.addEventListener(\"error\", lazyImageError, { once: true });\n            } else {\n                if (!$img.complete) {\n                    $parent.classList.add(\n                        CSS_CLASS.IMAGE_LAZY_LOADED\n                    );\n                }\n            }\n        }\n    } else {\n        // if 'loading' supported\n        for (const $img of $lazyImages) {\n            const $parent = queryClosestParent(\n                $img,\n                `.${CSS_CLASS.IMAGE}`\n            );\n\n            if($parent) {\n                $parent.classList.add(CSS_CLASS.IMAGE_LAZY_LOADED);\n            }\n        }\n    }\n};\n\n/* Reset Lazyload Callbacks */\nconst resetLazyloadCallbacks = () => {\n    if (\"loading\" in HTMLImageElement.prototype) {\n        const $lazyImages = document.querySelectorAll('[loading=\"lazy\"]');\n        for (const $img of $lazyImages) {\n            $img.removeEventListener(\"load\", lazyImageLoad, { once: true });\n            $img.removeEventListener(\"error\", lazyImageError, { once: true });\n        }\n    }\n};\n\n\nexport {\n    getImageMetadata,\n    loadImage,\n    lazyLoadImage,\n    triggerLazyloadCallbacks,\n    resetLazyloadCallbacks\n}\n", "import { module } from 'modujs';\nimport modularLoad from 'modularload';\nimport { resetLazyloadCallbacks, triggerLazyloadCallbacks } from \"../utils/image\";\n\nexport default class extends module {\n    constructor(m) {\n        super(m);\n    }\n\n    init() {\n        this.load = new modularLoad({\n            enterDelay: 0,\n            transitions: {\n                customTransition: {}\n            }\n        });\n\n        this.load.on('loaded', (transition, oldContainer, newContainer) => {\n            this.call('destroy', oldContainer, 'app');\n            this.call('update', newContainer, 'app');\n\n            /**\n             * Trigger lazyload\n             */\n            triggerLazyloadCallbacks();\n        });\n\n        this.load.on(\"loading\", () => {\n            /**\n             * Remove previous lazyload callbacks\n             */\n            resetLazyloadCallbacks();\n        });\n    }\n}\n", "// Clamp a value between a minimum and maximum value\nexport function clamp(min, input, max) {\n  return Math.max(min, Math.min(input, max))\n}\n\n// Truncate a floating-point number to a specified number of decimal places\nexport function truncate(value, decimals = 0) {\n  return parseFloat(value.toFixed(decimals))\n}\n\n// Linearly interpolate between two values using an amount (0 <= amt <= 1)\nexport function lerp(start, end, amt) {\n  return (1 - amt) * start + amt * end\n}\n\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\nexport function clampedModulo(dividend, divisor) {\n  let remainder = dividend % divisor\n\n  // If the remainder and divisor have different signs, adjust the remainder\n  if ((divisor > 0 && remainder < 0) || (divisor < 0 && remainder > 0)) {\n    remainder += divisor\n  }\n\n  return remainder\n}\n", "import { clamp, lerp } from './maths'\n\n// Animate class to handle value animations with lerping or easing\nexport class Animate {\n  // Advance the animation by the given delta time\n  advance(deltaTime) {\n    if (!this.isRunning) return\n\n    let completed = false\n\n    if (this.lerp) {\n      this.value = lerp(this.value, this.to, this.lerp)\n      if (Math.round(this.value) === this.to) {\n        this.value = this.to\n        completed = true\n      }\n    } else {\n      this.currentTime += deltaTime\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\n\n      completed = linearProgress >= 1\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\n      this.value = this.from + (this.to - this.from) * easedProgress\n    }\n\n    // Call the onUpdate callback with the current value and completed status\n    this.onUpdate?.(this.value, { completed })\n\n    if (completed) {\n      this.stop()\n    }\n  }\n\n  // Stop the animation\n  stop() {\n    this.isRunning = false\n  }\n\n  // Set up the animation from a starting value to an ending value\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\n  fromTo(from, to, { lerp = 0.1, duration = 1, easing = (t) => t, onUpdate }) {\n    this.from = this.value = from\n    this.to = to\n    this.lerp = lerp\n    this.duration = duration\n    this.easing = easing\n    this.currentTime = 0\n    this.isRunning = true\n\n    this.onUpdate = onUpdate\n  }\n}\n", "export function debounce(callback, delay) {\n  let timer\n  return function () {\n    let args = arguments\n    let context = this\n    clearTimeout(timer)\n    timer = setTimeout(function () {\n      callback.apply(context, args)\n    }, delay)\n  }\n}\n", "import { debounce } from './debounce'\n\nexport class Dimensions {\n  constructor(wrapper, content) {\n    this.wrapper = wrapper\n    this.content = content\n\n    if (this.wrapper === window) {\n      window.addEventListener('resize', this.onWindowResize, false)\n      this.onWindowResize()\n    } else {\n      this.wrapperResizeObserver = new ResizeObserver(\n        debounce(this.onWrapperResize, 100)\n      )\n      this.wrapperResizeObserver.observe(this.wrapper)\n      this.onWrapperResize()\n    }\n\n    this.contentResizeObserver = new ResizeObserver(\n      debounce(this.onContentResize, 100)\n    )\n    this.contentResizeObserver.observe(this.content)\n    this.onContentResize()\n  }\n\n  onWindowResize = () => {\n    this.width = window.innerWidth\n    this.height = window.innerHeight\n  }\n\n  destroy() {\n    window.removeEventListener('resize', this.onWindowResize, false)\n\n    this.wrapperResizeObserver?.disconnect()\n    this.contentResizeObserver?.disconnect()\n  }\n\n  onWrapperResize = () => {\n    this.width = this.wrapper.clientWidth\n    this.height = this.wrapper.clientHeight\n  }\n\n  onContentResize = () => {\n    const element =\n      this.wrapper === window ? document.documentElement : this.wrapper\n    this.scrollHeight = element.scrollHeight\n    this.scrollWidth = element.scrollWidth\n  }\n\n  get limit() {\n    return {\n      x: this.scrollWidth - this.width,\n      y: this.scrollHeight - this.height,\n    }\n  }\n}\n", "export let createNanoEvents = () => ({\n  events: {},\n\n  // Emit an event with the provided arguments\n  emit(event, ...args) {\n    let callbacks = this.events[event] || []\n    for (let i = 0, length = callbacks.length; i < length; i++) {\n      callbacks[i](...args)\n    }\n  },\n\n  // Register a callback for the specified event\n  on(event, cb) {\n    // Add the callback to the event's callback list, or create a new list with the callback\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\n\n    // Return an unsubscribe function\n    return () => {\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\n    }\n  },\n})\n", "import { clamp } from './maths'\nimport { createNanoEvents } from './nanoevents'\n\nexport class VirtualScroll {\n  constructor(\n    element,\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\n  ) {\n    this.element = element\n    this.wheelMultiplier = wheelMultiplier\n    this.touchMultiplier = touchMultiplier\n    this.normalizeWheel = normalizeWheel\n\n    this.touchStart = {\n      x: null,\n      y: null,\n    }\n\n    this.emitter = createNanoEvents()\n\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\n    this.element.addEventListener('touchstart', this.onTouchStart, {\n      passive: false,\n    })\n    this.element.addEventListener('touchmove', this.onTouchMove, {\n      passive: false,\n    })\n    this.element.addEventListener('touchend', this.onTouchEnd, {\n      passive: false,\n    })\n  }\n\n  // Add an event listener for the given event and callback\n  on(event, callback) {\n    return this.emitter.on(event, callback)\n  }\n\n  // Remove all event listeners and clean up\n  destroy() {\n    this.emitter.events = {}\n\n    this.element.removeEventListener('wheel', this.onWheel, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\n      passive: false,\n    })\n  }\n\n  // Event handler for 'touchstart' event\n  onTouchStart = (event) => {\n    const { clientX, clientY } = event.targetTouches\n      ? event.targetTouches[0]\n      : event\n\n    this.touchStart.x = clientX\n    this.touchStart.y = clientY\n\n    this.lastDelta = {\n      x: 0,\n      y: 0,\n    }\n  }\n\n  // Event handler for 'touchmove' event\n  onTouchMove = (event) => {\n    const { clientX, clientY } = event.targetTouches\n      ? event.targetTouches[0]\n      : event\n\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\n\n    this.touchStart.x = clientX\n    this.touchStart.y = clientY\n\n    this.lastDelta = {\n      x: deltaX,\n      y: deltaY,\n    }\n\n    this.emitter.emit('scroll', {\n      type: 'touch',\n      deltaX,\n      deltaY,\n      event,\n    })\n  }\n\n  onTouchEnd = (event) => {\n    this.emitter.emit('scroll', {\n      type: 'touch',\n      inertia: true,\n      deltaX: this.lastDelta.x,\n      deltaY: this.lastDelta.y,\n      event,\n    })\n  }\n\n  // Event handler for 'wheel' event\n  onWheel = (event) => {\n    let { deltaX, deltaY } = event\n\n    if (this.normalizeWheel) {\n      deltaX = clamp(-100, deltaX, 100)\n      deltaY = clamp(-100, deltaY, 100)\n    }\n\n    deltaX *= this.wheelMultiplier\n    deltaY *= this.wheelMultiplier\n\n    this.emitter.emit('scroll', { type: 'wheel', deltaX, deltaY, event })\n  }\n}\n", "import { version } from '../package.json'\nimport { Animate } from './animate'\nimport { Dimensions } from './dimensions'\nimport { clamp, clampedModulo } from './maths'\nimport { createNanoEvents } from './nanoevents'\nimport { VirtualScroll } from './virtual-scroll'\n\n// Technical explaination\n// - listen to 'wheel' events\n// - prevent 'wheel' event to prevent scroll\n// - normalize wheel delta\n// - add delta to targetScroll\n// - animate scroll to targetScroll (smooth context)\n// - if animation is not running, listen to 'scroll' events (native context)\n\nexport default class Lenis {\n  // isScrolling = true when scroll is animating\n  // isStopped = true if user should not be able to scroll - enable/disable programatically\n  // isSmooth = true if scroll should be animated\n  // isLocked = same as isStopped but enabled/disabled when scroll reaches target\n\n  /**\n   * @typedef {(t: number) => number} EasingFunction\n   * @typedef {'vertical' | 'horizontal'} Orientation\n   * @typedef {'vertical' | 'horizontal' | 'both'} GestureOrientation\n   *\n   * @typedef LenisOptions\n   * @property {Orientation} [direction]\n   * @property {GestureOrientation} [gestureDirection]\n   * @property {number} [mouseMultiplier]\n   * @property {boolean} [smooth]\n   *\n   * @property {Window | HTMLElement} [wrapper]\n   * @property {HTMLElement} [content]\n   * @property {Window | HTMLElement} [wheelEventsTarget]\n   * @property {boolean} [smoothWheel]\n   * @property {boolean} [smoothTouch]\n   * @property {boolean} [syncTouch]\n   * @property {number} [syncTouchLerp]\n   * @property {number} [touchInertiaMultiplier]\n   * @property {number} [duration]\n   * @property {EasingFunction} [easing]\n   * @property {number} [lerp]\n   * @property {boolean} [infinite]\n   * @property {Orientation} [orientation]\n   * @property {GestureOrientation} [gestureOrientation]\n   * @property {number} [touchMultiplier]\n   * @property {number} [wheelMultiplier]\n   * @property {boolean} [normalizeWheel]\n   *\n   * @param {LenisOptions}\n   */\n  constructor({\n    //--legacy options--//\n    direction,\n    gestureDirection,\n    mouseMultiplier,\n    smooth,\n    //--legacy options--//\n    wrapper = window,\n    content = document.documentElement,\n    wheelEventsTarget = wrapper,\n    smoothWheel = smooth ?? true,\n    smoothTouch = false,\n    syncTouch = false,\n    syncTouchLerp = 0.1,\n    touchInertiaMultiplier = 35,\n    duration, // in seconds\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\n    lerp = duration ? null : 0.1,\n    infinite = false,\n    orientation = direction ?? 'vertical', // vertical, horizontal\n    gestureOrientation = gestureDirection ?? 'vertical', // vertical, horizontal, both\n    touchMultiplier = 1,\n    wheelMultiplier = mouseMultiplier ?? 1,\n    normalizeWheel = false,\n  } = {}) {\n    // warn about legacy options\n    if (direction) {\n      console.warn(\n        'Lenis: `direction` option is deprecated, use `orientation` instead'\n      )\n    }\n    if (gestureDirection) {\n      console.warn(\n        'Lenis: `gestureDirection` option is deprecated, use `gestureOrientation` instead'\n      )\n    }\n    if (mouseMultiplier) {\n      console.warn(\n        'Lenis: `mouseMultiplier` option is deprecated, use `wheelMultiplier` instead'\n      )\n    }\n    if (smooth) {\n      console.warn(\n        'Lenis: `smooth` option is deprecated, use `smoothWheel` instead'\n      )\n    }\n\n    window.lenisVersion = version\n\n    // if wrapper is html or body, fallback to window\n    if (wrapper === document.documentElement || wrapper === document.body) {\n      wrapper = window\n    }\n\n    this.options = {\n      wrapper,\n      content,\n      wheelEventsTarget,\n      smoothWheel,\n      smoothTouch,\n      syncTouch,\n      syncTouchLerp,\n      touchInertiaMultiplier,\n      duration,\n      easing,\n      lerp,\n      infinite,\n      gestureOrientation,\n      orientation,\n      touchMultiplier,\n      wheelMultiplier,\n      normalizeWheel,\n    }\n\n    this.dimensions = new Dimensions(wrapper, content)\n    this.rootElement.classList.add('lenis')\n\n    this.velocity = 0\n    this.isStopped = false\n    this.isSmooth = smoothWheel || smoothTouch\n    this.isScrolling = false\n    this.targetScroll = this.animatedScroll = this.actualScroll\n    this.animate = new Animate()\n    this.emitter = createNanoEvents()\n\n    this.options.wrapper.addEventListener('scroll', this.onScroll, {\n      passive: false,\n    })\n\n    this.virtualScroll = new VirtualScroll(wheelEventsTarget, {\n      touchMultiplier,\n      wheelMultiplier,\n      normalizeWheel,\n    })\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\n  }\n\n  destroy() {\n    this.emitter.events = {}\n\n    this.options.wrapper.removeEventListener('scroll', this.onScroll, {\n      passive: false,\n    })\n\n    this.virtualScroll.destroy()\n  }\n\n  on(event, callback) {\n    return this.emitter.on(event, callback)\n  }\n\n  off(event, callback) {\n    this.emitter.events[event] = this.emitter.events[event]?.filter(\n      (i) => callback !== i\n    )\n  }\n\n  setScroll(scroll) {\n    // apply scroll value immediately\n    if (this.isHorizontal) {\n      this.rootElement.scrollLeft = scroll\n    } else {\n      this.rootElement.scrollTop = scroll\n    }\n  }\n\n  onVirtualScroll = ({ type, inertia, deltaX, deltaY, event }) => {\n    // keep zoom feature\n    if (event.ctrlKey) return\n\n    const isTouch = type === 'touch'\n    const isWheel = type === 'wheel'\n\n    if (\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) || // trackpad previous/next page gesture\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0) ||\n      (isTouch &&\n        this.options.gestureOrientation === 'vertical' &&\n        this.scroll === 0 &&\n        !this.options.infinite &&\n        deltaY <= 0) // touch pull to refresh\n    )\n      return\n\n    // catch if scrolling on nested scroll elements\n    if (\n      !!event\n        .composedPath()\n        .find((node) => node?.hasAttribute?.('data-lenis-prevent'))\n    )\n      return\n\n    if (this.isStopped || this.isLocked) {\n      event.preventDefault()\n      return\n    }\n\n    this.isSmooth =\n      ((this.options.smoothTouch || this.options.syncTouch) && isTouch) ||\n      (this.options.smoothWheel && isWheel)\n\n    if (!this.isSmooth) {\n      this.isScrolling = false\n      this.animate.stop()\n      return\n    }\n\n    event.preventDefault()\n\n    let delta = deltaY\n    if (this.options.gestureOrientation === 'both') {\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\n    } else if (this.options.gestureOrientation === 'horizontal') {\n      delta = deltaX\n    }\n\n    const syncTouch = isTouch && this.options.syncTouch\n    const hasTouchInertia = isTouch && inertia && Math.abs(delta) > 1\n    if (hasTouchInertia) {\n      delta = this.velocity * this.options.touchInertiaMultiplier\n    }\n\n    this.scrollTo(this.targetScroll + delta, {\n      programmatic: false,\n      ...(syncTouch && {\n        lerp: hasTouchInertia ? this.syncTouchLerp : 0.4, // should be 1 but had to leave 0.4 for iOS.....\n      }),\n    })\n  }\n\n  emit() {\n    this.emitter.emit('scroll', this)\n  }\n\n  onScroll = () => {\n    if (!this.isScrolling) {\n      const lastScroll = this.animatedScroll\n      this.animatedScroll = this.targetScroll = this.actualScroll\n      this.velocity = 0\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\n      this.emit()\n    }\n  }\n\n  reset() {\n    this.isLocked = false\n    this.isScrolling = false\n    this.velocity = 0\n    this.animate.stop()\n  }\n\n  start() {\n    this.isStopped = false\n\n    this.reset()\n  }\n\n  stop() {\n    this.isStopped = true\n    this.animate.stop()\n\n    this.reset()\n  }\n\n  raf(time) {\n    const deltaTime = time - (this.time || time)\n    this.time = time\n\n    this.animate.advance(deltaTime * 0.001)\n  }\n\n  scrollTo(\n    target,\n    {\n      offset = 0,\n      immediate = false,\n      lock = false,\n      duration = this.options.duration,\n      easing = this.options.easing,\n      lerp = !duration && this.options.lerp,\n      onComplete = null,\n      force = false, // scroll even if stopped\n      programmatic = true, // called from outside of the class\n    } = {}\n  ) {\n    if (this.isStopped && !force) return\n\n    // keywords\n    if (['top', 'left', 'start'].includes(target)) {\n      target = 0\n    } else if (['bottom', 'right', 'end'].includes(target)) {\n      target = this.limit\n    } else {\n      let node\n\n      if (typeof target === 'string') {\n        // CSS selector\n        node = document.querySelector(target)\n      } else if (target?.nodeType) {\n        // Node element\n        node = target\n      }\n\n      if (node) {\n        if (this.options.wrapper !== window) {\n          // nested scroll offset correction\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\n        }\n\n        const rect = node.getBoundingClientRect()\n\n        target =\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\n      }\n    }\n\n    if (typeof target !== 'number') return\n\n    target += offset\n    target = Math.round(target)\n\n    if (this.options.infinite) {\n      if (programmatic) {\n        this.targetScroll = this.animatedScroll = this.scroll\n      }\n    } else {\n      target = clamp(0, target, this.limit)\n    }\n\n    if (immediate) {\n      this.animatedScroll = this.targetScroll = target\n      this.setScroll(this.scroll)\n      this.reset()\n      this.emit()\n      onComplete?.()\n      return\n    }\n\n    if (!programmatic) {\n      if (target === this.targetScroll) return\n\n      this.targetScroll = target\n    }\n\n    this.animate.fromTo(this.animatedScroll, target, {\n      duration,\n      easing,\n      lerp,\n      onUpdate: (value, { completed }) => {\n        // started\n        if (lock) this.isLocked = true\n        this.isScrolling = true\n\n        // updated\n        this.velocity = value - this.animatedScroll\n        this.direction = Math.sign(this.velocity)\n\n        this.animatedScroll = value\n        this.setScroll(this.scroll)\n\n        if (programmatic) {\n          // wheel during programmatic should stop it\n          this.targetScroll = value\n        }\n\n        // completed\n        if (completed) {\n          if (lock) this.isLocked = false\n          requestAnimationFrame(() => {\n            //avoid double scroll event\n            this.isScrolling = false\n          })\n          this.velocity = 0\n          onComplete?.()\n        }\n\n        this.emit()\n      },\n    })\n  }\n\n  get rootElement() {\n    return this.options.wrapper === window\n      ? this.options.content\n      : this.options.wrapper\n  }\n\n  get limit() {\n    return this.isHorizontal ? this.dimensions.limit.x : this.dimensions.limit.y\n  }\n\n  get isHorizontal() {\n    return this.options.orientation === 'horizontal'\n  }\n\n  get actualScroll() {\n    // value browser takes into account\n    return this.isHorizontal\n      ? this.rootElement.scrollLeft\n      : this.rootElement.scrollTop\n  }\n\n  get scroll() {\n    return this.options.infinite\n      ? clampedModulo(this.animatedScroll, this.limit)\n      : this.animatedScroll\n  }\n\n  get progress() {\n    // avoid progress to be NaN\n    return this.limit === 0 ? 1 : this.scroll / this.limit\n  }\n\n  get isSmooth() {\n    return this.__isSmooth\n  }\n\n  set isSmooth(value) {\n    if (this.__isSmooth !== value) {\n      this.rootElement.classList.toggle('lenis-smooth', value)\n      this.__isSmooth = value\n    }\n  }\n\n  get isScrolling() {\n    return this.__isScrolling\n  }\n\n  set isScrolling(value) {\n    if (this.__isScrolling !== value) {\n      this.rootElement.classList.toggle('lenis-scrolling', value)\n      this.__isScrolling = value\n    }\n  }\n\n  get isStopped() {\n    return this.__isStopped\n  }\n\n  set isStopped(value) {\n    if (this.__isStopped !== value) {\n      this.rootElement.classList.toggle('lenis-stopped', value)\n      this.__isStopped = value\n    }\n  }\n}\n", "/**\n * Intersection Observer\n *\n * Detecting visibility of an element in the viewport.\n *\n * Features functions to:\n *\n * - Trigger inview/outOfView callbacks\n * - If the element has a requestAnimationFrame dependency, set interactivy status for the ScrollElement Class\n *\n * References:\n *\n * - {@link https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API}\n */\n\nimport { IIOOptions } from '../types';\nimport ScrollElement from './ScrollElement';\n\nexport default class IO {\n    public scrollElements: ScrollElement[];\n    private rootMargin: string;\n    private IORaf: boolean;\n    private observer!: IntersectionObserver;\n\n    constructor({\n        scrollElements,\n        rootMargin = '-1px -1px -1px -1px',\n        IORaf,\n    }: IIOOptions) {\n        // Parameters\n        this.scrollElements = scrollElements;\n        this.rootMargin = rootMargin;\n        this.IORaf = IORaf;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize Intersection Observer.\n     *\n     * @private\n     */\n    private _init() {\n        // Options\n        const observerOptions = {\n            rootMargin: this.rootMargin,\n        };\n\n        // Callback\n        const onIntersect = (entries: IntersectionObserverEntry[]) => {\n            entries.forEach((entry) => {\n                const $targetItem: ScrollElement | undefined =\n                    this.scrollElements.find(\n                        (item) => item.$el === entry.target\n                    );\n\n                if (entry.isIntersecting) {\n                    $targetItem && ($targetItem.isAlreadyIntersected = true);\n                    this._setInview(entry);\n                } else if ($targetItem && $targetItem.isAlreadyIntersected) {\n                    this._setOutOfView(entry);\n                }\n            });\n        };\n\n        // Instance\n        this.observer = new IntersectionObserver(onIntersect, observerOptions);\n\n        // Observe each default elements\n        for (const scrollElement of this.scrollElements) {\n            const $scrollElement = scrollElement.$el;\n            this.observe($scrollElement);\n        }\n    }\n\n    /**\n     * Lifecyle - Destroy Intersection Observer.\n     */\n    public destroy() {\n        this.observer.disconnect();\n    }\n\n    /**\n     * Subscribe element to the Intersection Observer.\n     *\n     * @param {HTMLElement} $scrollElement - DOM Element to observe.\n     */\n    public observe($scrollElement: HTMLElement) {\n        if (!$scrollElement) {\n            return;\n        }\n\n        this.observer.observe($scrollElement);\n    }\n\n    /**\n     * Unsubscribe element to the Intersection Observer.\n     *\n     * @param {HTMLElement} $scrollElement - DOM Element to unobserve.\n     */\n    public unobserve($scrollElement: HTMLElement) {\n        if (!$scrollElement) {\n            return;\n        }\n\n        this.observer.unobserve($scrollElement);\n    }\n\n    /**\n     * Find ScrollElementReference instance and trigger inview callbacks.\n     *\n     * @private\n     *\n     * @param {IntersectionObserverEntry} entry - DOM Element to observe.\n     */\n    private _setInview(entry: IntersectionObserverEntry) {\n        const scrollElement = this.scrollElements.find(\n            (scrollElement) => scrollElement.$el === entry.target\n        );\n\n        this.IORaf && scrollElement?.setInteractivityOn();\n        !this.IORaf && scrollElement?.setInview();\n    }\n\n    /**\n     * Find ScrollElementReference instance and trigger out of view callbacks.\n     *\n     * @private\n     *\n     * @param {IntersectionObserverEntry} entry - DOM Element to observe.\n     */\n    private _setOutOfView(entry: IntersectionObserverEntry) {\n        const scrollElement = this.scrollElements.find(\n            (scrollElement) => scrollElement.$el === entry.target\n        );\n\n        this.IORaf && scrollElement?.setInteractivityOff();\n        !this.IORaf && scrollElement?.setOutOfView();\n\n        // Unobserve if element doesn't have repeat attribute\n        if (!scrollElement?.attributes.scrollRepeat && !this.IORaf) {\n            this.unobserve(entry.target as HTMLElement);\n        }\n    }\n}\n", "// https://greensock.com/docs/v3/GSAP/gsap.utils\n\n/**\n * Clamp a value to fit within a specific range (ex: clamp(0, 100, -12) --> 0).\n *\n * @param {number} min   - Minimum value expected.\n * @param {number} max   - Maximum value expected.\n * @param {number} value - Current value.\n *\n * @returns {number} - Clamped value.\n */\nexport function clamp(min: number, max: number, value: number): number {\n    return value < min ? min : value > max ? max : value;\n}\n\n/**\n * Map one range to another (ex: mapRange(-10, 10, 0, 100, 5) --> 75).\n *\n * @param {number} inMin  - Current minimum value.\n * @param {number} inMax  - Current maximum value.\n * @param {number} outMin - Maximum value expected.\n * @param {number} outMax - Maximum value expected.\n * @param {number} value  - Current value.\n *\n * @returns {number} - New value that should be between minimum value expected and maximum value.\n */\nexport function mapRange(\n    inMin: number,\n    inMax: number,\n    outMin: number,\n    outMax: number,\n    value: number\n): number {\n    const inRange = inMax - inMin;\n    const outRange = outMax - outMin;\n    return outMin + (((value - inMin) / inRange) * outRange || 0);\n}\n\n/**\n * Map a number within a range to a progress between 0 to 1 (ex: normalize(100, 200, 150) --> 0.5).\n *\n * @param {number} min   - Current minimum value.\n * @param {number} max   - Current maximum value.\n * @param {number} value - Current value.\n *\n * @returns {number} - New value that should be between 0 and 1.\n */\nexport function normalize(min: number, max: number, value: number): number {\n    return mapRange(min, max, 0, 1, value);\n}\n\n/**\n * Get closest number from an array.\n *\n * @param {number[]} array  - Numbers array.\n * @param {number}   target - Reference value.\n *\n * @returns {number} - Closest number.\n */\nexport function closestNumber(array: number[], target: number): number {\n    return array.reduce((prev, curr) => {\n        return Math.abs(curr - target) < Math.abs(prev - target) ? curr : prev;\n    });\n}\n", "/**\n * Scroll Element\n *\n * Give tools to compute element progress in the viewport and triggers callbacks to animate it.\n *\n * Features functions to:\n *\n * - scrollClass - Add a custom class when the element is intersected by the offset\n * - scrollOffset - Determine offsets to intersect the element\n * - scrollPosition - Determine the element positions to consider an element as intersected.\n * - scrollModuleProgress - Send scroll progress to modular module that have a specific method (PROGRESS_MODULAR_METHOD)\n * - scrollCssProgress - Add a specific css variable (PROGRESS_CSS_VAR) that store the scroll progress\n * - scrollEventProgress - Send scroll progress to custom event listeners.\n * - scrollSpeed - Add a scroll multiplicator to create a parallax effect\n * - scrollRepeat - Repeat the option to trigger animation each time the element is intersected\n * - scrollCall - Call a custom event or a modular callback when the element is intersected\n */\n\nimport {\n    IModular,\n    IScrollElementOptions,\n    IScrollElementAttributes,\n    IScrollElementIntersection,\n    IScrollElementMetrics,\n    IProgressModularModules,\n    IScrollElementCallbacksValues,\n    scrollCallWay,\n    scrollCallFrom,\n    scrollOrientation,\n} from '../types';\nimport { clamp, closestNumber, normalize, mapRange } from '../utils/maths';\n\n/** Constants */\nconst INVIEW_CLASS = 'is-inview';\nconst PROGRESS_CSS_VAR = '--progress';\nconst PROGRESS_MODULAR_METHOD = 'onScrollProgress';\n\nexport default class ScrollElement {\n    public $el: HTMLElement;\n    public id: number;\n    public needRaf: boolean;\n    public attributes: IScrollElementAttributes;\n    public scrollOrientation: scrollOrientation;\n    public isAlreadyIntersected: boolean;\n\n    private intersection: IScrollElementIntersection;\n    private metrics: IScrollElementMetrics;\n    private currentScroll: number;\n    private translateValue: number;\n    private progress: number;\n    private lastProgress: number | null;\n    private modularInstance?: IModular;\n    private progressModularModules: IProgressModularModules[];\n    private isInview: boolean;\n    private isInteractive: boolean;\n    private isInFold: boolean;\n    private isFirstResize: boolean;\n\n    private subscribeElementUpdateFn: (scrollElement: ScrollElement) => void;\n    private unsubscribeElementUpdateFn: (scrollElement: ScrollElement) => void;\n\n    constructor({\n        $el,\n        id,\n        modularInstance,\n        subscribeElementUpdateFn,\n        unsubscribeElementUpdateFn,\n        needRaf,\n        scrollOrientation,\n    }: IScrollElementOptions) {\n        // Scroll DOM element\n        this.$el = $el;\n        // Unique ID\n        this.id = id;\n        // RAF option\n        this.needRaf = needRaf;\n        // Scroll Direction\n        this.scrollOrientation = scrollOrientation;\n        // Modular.js\n        this.modularInstance = modularInstance;\n        // Parent's callbacks\n        this.subscribeElementUpdateFn = subscribeElementUpdateFn;\n        this.unsubscribeElementUpdateFn = unsubscribeElementUpdateFn;\n\n        // Attributes\n        this.attributes = {\n            scrollClass: this.$el.dataset['scrollClass'] ?? INVIEW_CLASS,\n            scrollOffset: this.$el.dataset['scrollOffset'] ?? '0,0',\n            scrollPosition: this.$el.dataset['scrollPosition'] ?? 'start,end',\n            scrollModuleProgress:\n                this.$el.dataset['scrollModuleProgress'] != null,\n            scrollCssProgress: this.$el.dataset['scrollCssProgress'] != null,\n            scrollEventProgress:\n                this.$el.dataset['scrollEventProgress'] ?? null,\n            scrollSpeed:\n                this.$el.dataset['scrollSpeed'] != null\n                    ? parseFloat(this.$el.dataset['scrollSpeed'])\n                    : null,\n            scrollRepeat: this.$el.dataset['scrollRepeat'] != null,\n            scrollCall: this.$el.dataset['scrollCall'] ?? null,\n            scrollCallSelf: this.$el.dataset['scrollCallSelf'] != null,\n            scrollIgnoreFold: this.$el.dataset['scrollIgnoreFold'] != null,\n            scrollEnableTouchSpeed:\n                this.$el.dataset['scrollEnableTouchSpeed'] != null,\n        };\n\n        // Limits\n        this.intersection = {\n            start: 0,\n            end: 0,\n        };\n\n        // Metrics\n        this.metrics = {\n            offsetStart: 0,\n            offsetEnd: 0,\n            bcr: {} as DOMRect,\n        };\n\n        // Scroll Values\n        this.currentScroll =\n            this.scrollOrientation === 'vertical'\n                ? window.scrollY\n                : window.scrollX;\n\n        // Parallax\n        this.translateValue = 0;\n\n        // Progress\n        this.progress = 0;\n        this.lastProgress = null;\n        this.progressModularModules = [];\n\n        // Inview\n        this.isInview = false;\n        this.isInteractive = false;\n        this.isAlreadyIntersected = false;\n        this.isInFold = false;\n        this.isFirstResize = true;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize progress tracking.\n     *\n     * @private\n     */\n    private _init() {\n        if (!this.needRaf) {\n            return;\n        }\n\n        // Prepare modules progress\n        if (this.modularInstance && this.attributes.scrollModuleProgress) {\n            this._getProgressModularModules();\n        }\n\n        // First resize to compute all values\n        this._resize();\n    }\n\n    /**\n     * Callback - Resize callback\n     */\n    public onResize({ currentScroll }: IScrollElementCallbacksValues) {\n        this.currentScroll = currentScroll;\n        this._resize();\n    }\n\n    /**\n     * Callback - RAF callback\n     */\n    public onRender({ currentScroll, smooth }: IScrollElementCallbacksValues) {\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n        this.currentScroll = currentScroll;\n        this._computeProgress();\n\n        // Parallax\n        if (\n            this.attributes.scrollSpeed &&\n            !isNaN(this.attributes.scrollSpeed)\n        ) {\n            // if touch detected or smooth disabled\n            if (!this.attributes.scrollEnableTouchSpeed && !smooth) {\n                if (this.translateValue) {\n                    this.$el.style.transform = `translate3d(0, 0, 0)`;\n                }\n                this.translateValue = 0;\n\n                // if mousewheel or smooth enabled\n            } else {\n                // Check fold condition\n                if (this.isInFold) {\n                    const progress = Math.max(0, this.progress);\n                    this.translateValue =\n                        progress * wSize * this.attributes.scrollSpeed * -1;\n                } else {\n                    const progress = mapRange(0, 1, -1, 1, this.progress);\n                    this.translateValue =\n                        progress * wSize * this.attributes.scrollSpeed * -1;\n                }\n\n                this.$el.style.transform =\n                    this.scrollOrientation === 'vertical'\n                        ? `translate3d(0, ${this.translateValue}px, 0)`\n                        : `translate3d(${this.translateValue}px, 0, 0)`;\n            }\n        }\n    }\n\n    /**\n     * Inview callback\n     */\n    public setInview() {\n        if (this.isInview) {\n            return;\n        }\n\n        this.isInview = true;\n        this.$el.classList.add(this.attributes.scrollClass);\n\n        const way: scrollCallWay = 'enter';\n        const from: scrollCallFrom = this._getScrollCallFrom();\n        this.attributes.scrollCall && this._dispatchCall(way, from);\n    }\n\n    /**\n     * Out of view callback\n     */\n    public setOutOfView() {\n        if (!(this.isInview && this.attributes.scrollRepeat)) {\n            return;\n        }\n\n        this.isInview = false;\n        this.$el.classList.remove(this.attributes.scrollClass);\n\n        const way: scrollCallWay = 'leave';\n        const from: scrollCallFrom = this._getScrollCallFrom();\n        this.attributes.scrollCall && this._dispatchCall(way, from);\n    }\n\n    /**\n     * Switch interactivity on to subscribe the instance to the RAF\n     * and start calculations.\n     */\n    public setInteractivityOn() {\n        if (this.isInteractive) {\n            return;\n        }\n\n        this.isInteractive = true;\n        this.subscribeElementUpdateFn(this);\n    }\n\n    /**\n     * Switch interactivity off to unsubscribe the instance to the RAF\n     * and stop calculations.\n     */\n    public setInteractivityOff() {\n        if (!this.isInteractive) {\n            return;\n        }\n\n        this.isInteractive = false;\n        this.unsubscribeElementUpdateFn(this);\n\n        // Force progress to progress limit when the element is out\n        this.lastProgress != null &&\n            this._computeProgress(closestNumber([0, 1], this.lastProgress));\n    }\n\n    /**\n     * Resize method that compute the element's values.\n     *\n     * @private\n     */\n    private _resize() {\n        this.metrics.bcr = this.$el.getBoundingClientRect();\n        this._computeMetrics();\n        this._computeIntersection();\n\n        // First resize logic\n        if (this.isFirstResize) {\n            this.isFirstResize = false;\n            // Dispatch default call if the element is in fold.\n            if (this.isInFold) {\n                this.setInview();\n            }\n        }\n    }\n\n    /**\n     * Compute element's offsets and determine if the element is in fold.\n     *\n     * @private\n     */\n    private _computeMetrics() {\n        const { top, left, height, width } = this.metrics.bcr;\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n        const metricsStart = this.scrollOrientation === 'vertical' ? top : left;\n        const metricsSize =\n            this.scrollOrientation === 'vertical' ? height : width;\n\n        this.metrics.offsetStart =\n            this.currentScroll + metricsStart - this.translateValue;\n        this.metrics.offsetEnd = this.metrics.offsetStart + metricsSize;\n\n        if (\n            this.metrics.offsetStart < wSize &&\n            !this.attributes.scrollIgnoreFold\n        ) {\n            this.isInFold = true;\n        } else {\n            this.isInFold = false;\n        }\n    }\n\n    /**\n     * Compute intersection values depending on the context.\n     *\n     * @private\n     */\n    private _computeIntersection() {\n        // Window size\n        const wSize =\n            this.scrollOrientation === 'vertical'\n                ? window.innerHeight\n                : window.innerWidth;\n\n        // Metrics size\n        const metricsSize =\n            this.scrollOrientation === 'vertical'\n                ? this.metrics.bcr.height\n                : this.metrics.bcr.width;\n\n        // Offset\n        const offset = this.attributes.scrollOffset.split(',');\n        const offsetStart = offset[0] != undefined ? offset[0].trim() : '0';\n        const offsetEnd = offset[1] != undefined ? offset[1].trim() : '0';\n\n        // Positions\n        const scrollPosition = this.attributes.scrollPosition.split(',');\n        let scrollPositionStart =\n            scrollPosition[0] != undefined ? scrollPosition[0].trim() : 'start';\n        const scrollPositionEnd =\n            scrollPosition[1] != undefined ? scrollPosition[1].trim() : 'end';\n\n        // Viewport\n        const viewportStart = offsetStart.includes('%')\n            ? wSize * parseInt(offsetStart.replace('%', '').trim()) * 0.01\n            : parseInt(offsetStart);\n        const viewportEnd = offsetEnd.includes('%')\n            ? wSize * parseInt(offsetEnd.replace('%', '').trim()) * 0.01\n            : parseInt(offsetEnd);\n\n        // Fold exception\n        if (this.isInFold) {\n            scrollPositionStart = 'fold';\n        }\n\n        // Define Intersection Start\n        switch (scrollPositionStart) {\n            case 'start':\n                this.intersection.start =\n                    this.metrics.offsetStart - wSize + viewportStart;\n                break;\n\n            case 'middle':\n                this.intersection.start =\n                    this.metrics.offsetStart -\n                    wSize +\n                    viewportStart +\n                    metricsSize * 0.5;\n                break;\n\n            case 'end':\n                this.intersection.start =\n                    this.metrics.offsetStart -\n                    wSize +\n                    viewportStart +\n                    metricsSize;\n                break;\n\n            case 'fold':\n                this.intersection.start = 0;\n                break;\n\n            default:\n                this.intersection.start =\n                    this.metrics.offsetStart - wSize + viewportStart;\n                break;\n        }\n\n        // Define Intersection End\n        switch (scrollPositionEnd) {\n            case 'start':\n                this.intersection.end = this.metrics.offsetStart - viewportEnd;\n                break;\n\n            case 'middle':\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize * 0.5;\n                break;\n\n            case 'end':\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize;\n                break;\n\n            default:\n                this.intersection.end =\n                    this.metrics.offsetStart - viewportEnd + metricsSize;\n                break;\n        }\n\n        // Avoid to have the end < the start intersection >\n        if (this.intersection.end <= this.intersection.start) {\n            switch (scrollPositionEnd) {\n                case 'start':\n                    this.intersection.end = this.intersection.start + 1;\n                    break;\n\n                case 'middle':\n                    this.intersection.end =\n                        this.intersection.start + metricsSize * 0.5;\n                    break;\n\n                case 'end':\n                    this.intersection.end =\n                        this.intersection.start + metricsSize;\n                    break;\n\n                default:\n                    this.intersection.end = this.intersection.start + 1;\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Compute the scroll progress of the element depending\n     * on its intersection values.\n     *\n     * @private\n     *\n     * @param {number} [forcedProgress] - Value to force progress.\n     */\n    private _computeProgress(forcedProgress?: number) {\n        // Progress\n        const progress =\n            forcedProgress ??\n            clamp(\n                0,\n                1,\n                normalize(\n                    this.intersection.start,\n                    this.intersection.end,\n                    this.currentScroll\n                )\n            );\n\n        this.progress = progress;\n\n        if (progress != this.lastProgress) {\n            this.lastProgress = progress;\n\n            // Set the element's progress to the css variable\n            this.attributes.scrollCssProgress && this._setCssProgress(progress);\n\n            // Set the element's progress to the custom event listeners\n            this.attributes.scrollEventProgress &&\n                this._setCustomEventProgress(progress);\n\n            // Set the element's progress to inline modules\n            if (this.attributes.scrollModuleProgress) {\n                for (const modularModules of this.progressModularModules) {\n                    this.modularInstance &&\n                        this.modularInstance.call(\n                            PROGRESS_MODULAR_METHOD,\n                            progress,\n                            modularModules.moduleName,\n                            modularModules.moduleId\n                        );\n                }\n            }\n\n            // Logic to trigger the inview/out of view callbacks\n            progress > 0 && progress < 1 && this.setInview();\n            progress === 0 && this.setOutOfView();\n            progress === 1 && this.setOutOfView();\n        }\n    }\n\n    /**\n     * Set the element's progress to a specific css variable.\n     *\n     * @private\n     *\n     * @param {number} [currentProgress] - Progress value.\n     */\n    _setCssProgress(currentProgress = 0) {\n        this.$el.style.setProperty(\n            PROGRESS_CSS_VAR,\n            currentProgress.toString()\n        );\n    }\n\n    /**\n     * Set the element's progress to the custom event listeners.\n     *\n     * @private\n     *\n     * @param {number} [currentProgress] - Progress value.\n     */\n    _setCustomEventProgress(currentProgress = 0) {\n        const customEventName = this.attributes.scrollEventProgress;\n\n        if (!customEventName) return;\n\n        const customEvent = new CustomEvent(customEventName, {\n            detail: {\n                target: this.$el,\n                progress: currentProgress,\n            },\n        });\n        window.dispatchEvent(customEvent);\n    }\n\n    /**\n     * Get modular modules that can listen the element's progress.\n     *\n     * @private\n     */\n    _getProgressModularModules() {\n        if (!this.modularInstance) {\n            return;\n        }\n\n        const modulesIdNames = Object.keys(this.$el.dataset).filter((key) =>\n            key.includes('module')\n        );\n        const modules: any[] = Object.entries(this.modularInstance.modules);\n\n        if (!modulesIdNames.length) {\n            return;\n        }\n\n        for (const modulesIdName of modulesIdNames) {\n            const moduleId = this.$el.dataset[modulesIdName];\n\n            if (!moduleId) {\n                return;\n            }\n\n            for (const module of modules) {\n                const [moduleName, moduleObj] = module;\n\n                if (moduleId in moduleObj) {\n                    this.progressModularModules.push({\n                        moduleName,\n                        moduleId,\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * Function to get scroll call from.\n     *\n     * @private\n     */\n    _getScrollCallFrom(): scrollCallFrom {\n        const closestIntersectionValue = closestNumber(\n            [this.intersection.start, this.intersection.end],\n            this.currentScroll\n        );\n        return this.intersection.start === closestIntersectionValue\n            ? 'start'\n            : 'end';\n    }\n\n    /**\n     * Function to dispatch a custom event or call a modular callback.\n     *\n     * @private\n     *\n     * @param {scrollCallWay} way - Enter or leave.\n     * @param {scrollCallFrom} from - Start or end.\n     */\n    _dispatchCall(way: scrollCallWay, from: scrollCallFrom) {\n        const callParameters = this.attributes.scrollCall?.split(',');\n        const callSelf = this.attributes?.scrollCallSelf;\n\n        if (callParameters && callParameters.length > 1) {\n            // Using Modular.js (https://github.com/modularorg/modularjs)\n            const [func, moduleName, moduleId] = callParameters;\n            let targetModuleId;\n\n            // If the module is set on the scroll element\n            if (callSelf) {\n                targetModuleId = this.$el.dataset[`module${moduleName.trim()}`];\n            } else {\n                targetModuleId = moduleId;\n            }\n\n            this.modularInstance &&\n                this.modularInstance.call(\n                    func.trim(),\n                    {\n                        target: this.$el,\n                        way,\n                        from,\n                    },\n                    moduleName.trim(),\n                    targetModuleId?.trim()\n                );\n        } else if (callParameters) {\n            // Using CustomEvent API (https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent)\n            const [customEventName] = callParameters;\n            const customEvent = new CustomEvent(customEventName, {\n                detail: {\n                    target: this.$el,\n                    way,\n                    from,\n                },\n            });\n            window.dispatchEvent(customEvent);\n        }\n    }\n}\n", "/**\n * Integrates Lenis with Locomotive's built-in animation system\n */\n\nimport {\n    CoreOptions,\n    IModular,\n    IScrollElementCallbacksValues,\n    scrollOrientation,\n} from '../types';\nimport IO from './IO';\nimport ScrollElement from './ScrollElement';\n\n/** Defined attributes that need a requestAnimationFrame */\nconst ATTRIBUTES_THAT_NEED_RAF = [\n    'scrollOffset',\n    'scrollPosition',\n    'scrollModuleProgress',\n    'scrollCssProgress',\n    'scrollEventProgress',\n    'scrollSpeed',\n];\n\n/** Default root margins */\nconst TRIGGER_ROOT_MARGIN = '-1px -1px -1px -1px';\nconst RAF_ROOT_MARGIN = '100% 100% 100% 100%'; // Add 100vh top/bottom && 100vw left/right to use a biggest value with data-scroll-speed\n\nexport default class Core {\n    private $scrollContainer!: HTMLElement;\n    private modularInstance?: IModular;\n    private triggerRootMargin!: string;\n    private rafRootMargin!: string;\n    private scrollElements!: ScrollElement[];\n    private triggeredScrollElements!: ScrollElement[];\n    private RAFScrollElements!: ScrollElement[];\n    private scrollElementsToUpdate!: ScrollElement[];\n    private IOTriggerInstance!: IO;\n    private IORafInstance!: IO;\n    private scrollOrientation!: scrollOrientation;\n\n    constructor({\n        $el,\n        modularInstance,\n        triggerRootMargin,\n        rafRootMargin,\n        scrollOrientation,\n    }: CoreOptions) {\n        if (!$el) {\n            console.error('Please provide a DOM Element as scrollContainer');\n            return;\n        }\n\n        // Scroll container\n        this.$scrollContainer = $el;\n\n        // Modular.js\n        this.modularInstance = modularInstance;\n\n        // Scroll Direction\n        this.scrollOrientation = scrollOrientation;\n\n        // IO Margins\n        this.triggerRootMargin = triggerRootMargin ?? TRIGGER_ROOT_MARGIN;\n        this.rafRootMargin = rafRootMargin ?? RAF_ROOT_MARGIN;\n\n        // ScrollElements arrays\n        this.scrollElements = [];\n        this.triggeredScrollElements = [];\n        this.RAFScrollElements = [];\n        this.scrollElementsToUpdate = [];\n\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize the core.\n     *\n     * @private\n     */\n    private _init() {\n        const $scrollElements =\n            this.$scrollContainer.querySelectorAll('[data-scroll]');\n\n        const $scrollElementsArr = Array.from($scrollElements) as HTMLElement[]\n        this._subscribeScrollElements($scrollElementsArr);\n\n        // Trigger IO\n        this.IOTriggerInstance = new IO({\n            scrollElements: [...this.triggeredScrollElements],\n            rootMargin: this.triggerRootMargin,\n            IORaf: false,\n        });\n\n        // Raf IO\n        this.IORafInstance = new IO({\n            scrollElements: [...this.RAFScrollElements],\n            rootMargin: this.rafRootMargin,\n            IORaf: true,\n        });\n    }\n\n    /**\n     * Lifecyle - Destroy core.\n     */\n    public destroy() {\n        this.IOTriggerInstance.destroy();\n        this.IORafInstance.destroy();\n        this._unsubscribeAllScrollElements();\n    }\n\n    /**\n     * Callback - Resize callback.\n     */\n    onResize({ currentScroll }: IScrollElementCallbacksValues) {\n        for (const scrollElement of this.RAFScrollElements) {\n            scrollElement.onResize({\n                currentScroll,\n            } as IScrollElementCallbacksValues);\n        }\n    }\n\n    /**\n     * Callback - RAF callback.\n     */\n    onRender({ currentScroll, smooth }: IScrollElementCallbacksValues) {\n        for (const scrollElement of this.scrollElementsToUpdate) {\n            scrollElement.onRender({\n                currentScroll,\n                smooth,\n            } as IScrollElementCallbacksValues);\n        }\n    }\n\n    /**\n     * Remove items from lists of scroll elements and compute all new values.\n     *\n     * @param {HTMLElement} $oldContainer - HTMLElement that contains data-scroll elements to unsubscribe\n     */\n    removeScrollElements($oldContainer: HTMLElement) {\n        const $scrollElementsToRemove =\n            $oldContainer.querySelectorAll('[data-scroll]');\n\n        if (!$scrollElementsToRemove.length) return;\n\n        // 1. Remove from IO\n        for (let index = 0; index < this.triggeredScrollElements.length; index++) {\n            const scrollElement = this.triggeredScrollElements[index];\n            const $scrollElementsToRemoveArr = Array.from($scrollElementsToRemove) as HTMLElement []\n            if ($scrollElementsToRemoveArr.indexOf(scrollElement.$el) > -1) {\n                this.IOTriggerInstance.unobserve(scrollElement.$el);\n                this.triggeredScrollElements.splice(index, 1);\n            }\n        }\n\n        for (let index = 0; index < this.RAFScrollElements.length; index++) {\n            const scrollElement = this.RAFScrollElements[index];\n            const $scrollElementsToRemoveArr = Array.from($scrollElementsToRemove) as HTMLElement []\n            if ($scrollElementsToRemoveArr.indexOf(scrollElement.$el) > -1) {\n                this.IORafInstance.unobserve(scrollElement.$el);\n                this.RAFScrollElements.splice(index, 1);\n            }\n        }\n\n        // 2. Remove from scrollElementsToUpdate[] and scrollElements[]\n        $scrollElementsToRemove.forEach(($scrollElement) => {\n            const targetScrollElementToUpdate =\n                this.scrollElementsToUpdate.find(\n                    (scrollElement) => scrollElement.$el === $scrollElement\n                );\n            const targetScrollElement = this.scrollElements.find(\n                (scrollElement) => scrollElement.$el === $scrollElement\n            );\n\n            if (targetScrollElementToUpdate) {\n                this._unsubscribeElementUpdate(targetScrollElementToUpdate);\n            }\n            if (targetScrollElement) {\n                this.scrollElements = this.scrollElements.filter(\n                    (scrollElementItem) =>\n                        scrollElementItem.id != targetScrollElement.id\n                );\n            }\n        });\n    }\n\n    /**\n     * Add items to lists of scroll elements and compute all new values.\n     *\n     * @param {HTMLElement} $newContainer - HTMLElement that contains data-scroll elements to subscribe\n     */\n    addScrollElements($newContainer: HTMLElement) {\n        // 3. Rebuild ScrollElements\n        const $scrollElements = $newContainer.querySelectorAll('[data-scroll]');\n\n        // 4. Get max scrollElement.id\n        const ids: number[] = [];\n        this.scrollElements.forEach((scrollElement) => {\n            ids.push(scrollElement.id);\n        });\n        const maxID = Math.max(...ids);\n        const fromIndex = maxID + 1;\n        const $scrollElementsArr = Array.from($scrollElements) as HTMLElement[]\n        this._subscribeScrollElements(\n            $scrollElementsArr,\n            fromIndex,\n            true\n        );\n    }\n\n    /**\n     * Create a ScrollElement instance for each elements with\n     * `data-scroll` attribute.\n     *\n     * @private\n     *\n     * @param {HTMLElement[]} $scrollElements - List of elements that need\n     *     to be regarded.\n     */\n    _subscribeScrollElements(\n        $scrollElements: HTMLElement[],\n        fromIndex = 0,\n        toObserve = false\n    ) {\n        // For each scroll element create a ScrollElement instance\n        for (let index = 0; index < $scrollElements.length; index++) {\n            const $scrollElement = $scrollElements[index];\n            const needRaf = this._checkRafNeeded($scrollElement);\n\n            const scrollElementInstance = new ScrollElement({\n                $el: $scrollElement,\n                id: fromIndex + index,\n                scrollOrientation: this.scrollOrientation,\n                modularInstance: this.modularInstance,\n                subscribeElementUpdateFn:\n                    this._subscribeElementUpdate.bind(this),\n                unsubscribeElementUpdateFn:\n                    this._unsubscribeElementUpdate.bind(this),\n                needRaf,\n            });\n\n            // Push to common array\n            this.scrollElements.push(scrollElementInstance);\n\n            // Push to specific array\n            if (needRaf) {\n                this.RAFScrollElements.push(scrollElementInstance);\n\n                // Dynamic observe item\n                if (toObserve) {\n                    this.IORafInstance.scrollElements.push(\n                        scrollElementInstance\n                    );\n                    this.IORafInstance.observe(scrollElementInstance.$el);\n                }\n            } else {\n                this.triggeredScrollElements.push(scrollElementInstance);\n\n                // Dynamic observe item\n                if (toObserve) {\n                    this.IOTriggerInstance.scrollElements.push(\n                        scrollElementInstance\n                    );\n                    this.IOTriggerInstance.observe(scrollElementInstance.$el);\n                }\n            }\n        }\n    }\n\n    /**\n     * Clear all ScrollElement arrays.\n     *\n     * @private\n     */\n    _unsubscribeAllScrollElements() {\n        this.scrollElements = [];\n        this.RAFScrollElements = [];\n        this.triggeredScrollElements = [];\n        this.scrollElementsToUpdate = [];\n    }\n\n    /**\n     * Subscribe ScrollElement instance that needs to be updated.\n     *\n     * @private\n     *\n     * @param {ScrollElement} scrollElement - ScrollElement instance inview\n     *     that needs to be updated.\n     */\n    _subscribeElementUpdate(scrollElement: ScrollElement) {\n        this.scrollElementsToUpdate.push(scrollElement);\n    }\n\n    /**\n     * Unscribe ScrollElement instance that doesn't need to be updated.\n     *\n     * @private\n     *\n     * @param {ScrollElement} scrollElement - The updated ScrollElement instance\n     *     out of view now.\n     */\n    _unsubscribeElementUpdate(scrollElement: ScrollElement) {\n        this.scrollElementsToUpdate = this.scrollElementsToUpdate.filter(\n            (scrollElementToUpdate) =>\n                scrollElementToUpdate.id != scrollElement.id\n        );\n    }\n\n    /**\n     * Check if a DOM Element need a requestAnimationFrame to be used.\n     *\n     * @private\n     *\n     * @param {HTMLElement} $scrollElement - The element that needs to be checked.\n     *\n     * @returns {boolean}\n     */\n    _checkRafNeeded($scrollElement: HTMLElement) {\n        let attributesThatNeedRaf = [...ATTRIBUTES_THAT_NEED_RAF];\n\n        // Remove utils\n        const removeAttribute = (attributeToRemove: string) => {\n            attributesThatNeedRaf = attributesThatNeedRaf.filter(\n                (attribute) => attribute != attributeToRemove\n            );\n        };\n\n        // 1. Check scroll offset values\n        if ($scrollElement.dataset.scrollOffset) {\n            const value = $scrollElement.dataset.scrollOffset\n                .split(',')\n                .map((test) => test.replace('%', '').trim())\n                .join(',');\n            if (value != '0,0') {\n                return true;\n            } else {\n                removeAttribute('scrollOffset');\n            }\n        } else {\n            removeAttribute('scrollOffset');\n        }\n\n        // 2. Check scroll position values\n        if ($scrollElement.dataset.scrollPosition) {\n            const value = $scrollElement.dataset.scrollPosition.trim();\n            if (value != 'top,bottom') {\n                return true;\n            } else {\n                removeAttribute('scrollPosition');\n            }\n        } else {\n            removeAttribute('scrollPosition');\n        }\n\n        // 3. Check scroll speed values\n        if (\n            $scrollElement.dataset.scrollSpeed &&\n            !isNaN(parseFloat($scrollElement.dataset.scrollSpeed))\n        ) {\n            return true;\n        } else {\n            removeAttribute('scrollSpeed');\n        }\n\n        // 4. Check others attributes\n        for (const attribute of attributesThatNeedRaf) {\n            if (attribute in $scrollElement.dataset) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n", "/**\n * Resize Observer\n *\n * The Resize Observer API provides a performant mechanism by which code can monitor an element for changes to its size,\n * with notifications being delivered to the observer each time the size changes.\n *\n * Features functions to:\n *\n * - Trigger the resize callback if the specified element's size change.\n *\n * References:\n *\n * - {@link https://developer.mozilla.org/en-US/docs/Web/API/Resize_Observer_API}\n */\n\nimport { IROOptions } from '../types';\n\nexport default class RO {\n    private $resizeElements: HTMLElement[];\n    private isFirstObserve: boolean;\n    private observer!: ResizeObserver;\n    private resizeCallback: () => void;\n\n    constructor({ resizeElements, resizeCallback = () => {} }: IROOptions) {\n        // Parameters\n        this.$resizeElements = resizeElements;\n        this.resizeCallback = resizeCallback;\n\n        // Flags\n        this.isFirstObserve = true;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize Resize Observer.\n     *\n     * @private\n     */\n    private _init() {\n        // Callback\n        const onResize = (entries: ResizeObserverEntry[]) => {\n            !this.isFirstObserve && this.resizeCallback?.();\n            this.isFirstObserve = false;\n        };\n\n        // Instance\n        this.observer = new ResizeObserver(onResize);\n\n        // Observe each default elements\n        for (const $resizeElement of this.$resizeElements) {\n            this.observer.observe($resizeElement);\n        }\n    }\n\n    /**\n     * Lifecyle - Destroy Resize Observer.\n     */\n    public destroy() {\n        this.observer.disconnect();\n    }\n}\n", "//@ts-ignore\nimport Lenis from '@studio-freight/lenis';\nimport Core from './core/Core';\nimport RO from './core/RO';\nimport {\n    ILenisOptions,\n    ILenisScrollToOptions,\n    ILenisScrollValues,\n    ILocomotiveScrollOptions,\n    IModular,\n    lenisTargetScrollTo,\n} from './types';\n\n/**\n * @type {ILenisOptions}\n */\nconst defaultLenisOptions: ILenisOptions = {\n    wrapper: window,\n    content: document.documentElement,\n    lerp: 0.1,\n    duration: 1.2,\n    orientation: 'vertical',\n    gestureOrientation: 'vertical',\n    smoothWheel: true,\n    smoothTouch: false,\n    wheelMultiplier: 1,\n    touchMultiplier: 2,\n    normalizeWheel: true,\n    easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)), // https://www.desmos.com/calculator/brs54l4xou\n};\n\n/**\n * Locomotive Scroll\n *\n * Detection of elements in viewport & smooth scrolling with parallax.\n *\n * Inspired by\n * {@link https://github.com/locomotivemtl/locomotive-scroll locomotive-scroll.js}\n * and built around\n * {@link https://github.com/studio-freight/lenis lenis.js}.\n */\n\nexport default class LocomotiveScroll {\n    public rafPlaying: boolean;\n\n    private lenisInstance: any;\n    private coreInstance: any;\n\n    private lenisOptions: ILenisOptions;\n    private modularInstance?: IModular;\n    private triggerRootMargin?: string;\n    private rafRootMargin?: string;\n    private rafInstance?: any;\n    private autoResize?: boolean;\n    private autoStart?: boolean;\n    private ROInstance?: RO;\n    private scrollCallback?(scrollValues: ILenisScrollValues): void;\n    private initCustomTicker?: (render: () => void) => void;\n    private destroyCustomTicker?: (render: () => void) => void;\n    private _onRenderBind: () => void;\n    private _onResizeBind: () => void;\n    private _onScrollToBind: (event: MouseEvent) => void;\n\n    constructor({\n        lenisOptions = {},\n        modularInstance,\n        triggerRootMargin,\n        rafRootMargin,\n        autoResize = true,\n        autoStart = true,\n        scrollCallback = () => {},\n        initCustomTicker,\n        destroyCustomTicker,\n    }: ILocomotiveScrollOptions = {}) {\n        // Arguments\n        this.lenisOptions = { ...defaultLenisOptions, ...lenisOptions };\n\n        Object.assign(this, {\n            lenisOptions,\n            modularInstance,\n            triggerRootMargin,\n            rafRootMargin,\n            autoResize,\n            autoStart,\n            scrollCallback,\n            initCustomTicker,\n            destroyCustomTicker,\n        });\n\n        // Binding\n        this._onRenderBind = this._onRender.bind(this);\n        this._onScrollToBind = this._onScrollTo.bind(this);\n        this._onResizeBind = this._onResize.bind(this);\n\n        // Data\n        this.rafPlaying = false;\n\n        // Init\n        this._init();\n    }\n\n    /**\n     * Lifecyle - Initialize instance.\n     *\n     * @private\n     */\n    private _init(): void {\n        // Create Lenis instance\n        this.lenisInstance = new Lenis({\n            wrapper: this.lenisOptions.wrapper,\n            content: this.lenisOptions.content,\n            lerp: this.lenisOptions.lerp,\n            duration: this.lenisOptions.duration,\n            orientation: this.lenisOptions.orientation,\n            gestureOrientation: this.lenisOptions.gestureOrientation,\n            smoothWheel: this.lenisOptions.smoothWheel,\n            smoothTouch: this.lenisOptions.smoothTouch,\n            wheelMultiplier: this.lenisOptions.wheelMultiplier,\n            touchMultiplier: this.lenisOptions.touchMultiplier,\n            normalizeWheel: this.lenisOptions.normalizeWheel,\n            easing: this.lenisOptions.easing,\n        });\n        this.lenisInstance?.on('scroll', this.scrollCallback);\n\n        // Add scroll direction attribute on body\n        document.documentElement.setAttribute(\n            'data-scroll-orientation',\n            this.lenisInstance.options.orientation\n        );\n\n        requestAnimationFrame(() => {\n            // Create Core Instance\n            this.coreInstance = new Core({\n                $el: this.lenisInstance.rootElement,\n                modularInstance: this.modularInstance,\n                triggerRootMargin: this.triggerRootMargin,\n                rafRootMargin: this.rafRootMargin,\n                scrollOrientation: this.lenisInstance.options.orientation,\n            });\n\n            // Bind Events\n            this._bindEvents();\n\n            // RAF warning\n            if (this.initCustomTicker && !this.destroyCustomTicker) {\n                console.warn(\n                    'initCustomTicker callback is declared, but destroyCustomTicker is not. Please pay attention. It could cause trouble.'\n                );\n            } else if (!this.initCustomTicker && this.destroyCustomTicker) {\n                console.warn(\n                    'destroyCustomTicker callback is declared, but initCustomTicker is not. Please pay attention. It could cause trouble.'\n                );\n            }\n\n            // Start RAF\n            this.autoStart && this.start();\n        });\n    }\n\n    /**\n     * Lifecyle - Destroy instance.\n     */\n    public destroy(): void {\n        // Stop raf\n        this.stop();\n        // Unbind Events\n        this._unbindEvents();\n        // Destroy Lenis\n        this.lenisInstance.destroy();\n        // Destroy Core\n        this.coreInstance.destroy();\n    }\n\n    /**\n     * Events - Subscribe events to listen.\n     */\n    private _bindEvents() {\n        this._bindScrollToEvents();\n\n        if (this.autoResize) {\n            if ('ResizeObserver' in window) {\n                this.ROInstance = new RO({\n                    resizeElements: [document.body],\n                    resizeCallback: this._onResizeBind,\n                });\n            } else {\n                (window as any).addEventListener('resize', this._onResizeBind);\n            }\n        }\n    }\n\n    /**\n     * Events - Unsubscribe listened events.\n     */\n    private _unbindEvents() {\n        this._unbindScrollToEvents();\n\n        if (this.autoResize) {\n            if ('ResizeObserver' in window) {\n                this.ROInstance && this.ROInstance.destroy();\n            } else {\n                (window as any).removeEventListener(\n                    'resize',\n                    this._onResizeBind\n                );\n            }\n        }\n    }\n\n    /**\n     * Events - Subscribe scrollTo events to listen.\n     */\n    private _bindScrollToEvents($container?: HTMLElement) {\n        const $rootContainer = $container\n            ? $container\n            : this.lenisInstance.rootElement;\n        const $scrollToElements =\n            $rootContainer?.querySelectorAll('[data-scroll-to]');\n\n        $scrollToElements?.length &&\n            $scrollToElements.forEach(($el: HTMLElement): void => {\n                $el.addEventListener('click', this._onScrollToBind, false);\n            });\n    }\n\n    /**\n     * Events - Unsubscribe scrollTo listened events.\n     */\n    private _unbindScrollToEvents($container?: HTMLElement) {\n        const $rootContainer = $container\n            ? $container\n            : this.lenisInstance.rootElement;\n        const $scrollToElements =\n            $rootContainer?.querySelectorAll('[data-scroll-to]');\n        $scrollToElements?.length &&\n            $scrollToElements.forEach(($el: HTMLElement) => {\n                $el.removeEventListener('click', this._onScrollToBind, false);\n            });\n    }\n\n    /**\n     * Callback - Resize callback.\n     */\n    private _onResize() {\n        // Waiting the next frame to get the new current scroll value return by Lenis\n        requestAnimationFrame(() => {\n            this.coreInstance?.onResize({\n                currentScroll: this.lenisInstance.scroll,\n            });\n        });\n    }\n\n    /**\n     * Callback - Render callback.\n     */\n    private _onRender() {\n        this.lenisInstance?.raf(Date.now());\n\n        this.coreInstance?.onRender({\n            currentScroll: this.lenisInstance.scroll,\n            smooth: this.lenisInstance.isSmooth,\n        });\n    }\n\n    /**\n     * Callback - Scroll To callback.\n     */\n    private _onScrollTo(event: MouseEvent) {\n        event.preventDefault();\n        const $target = (event.currentTarget as HTMLElement) ?? null;\n        if (!$target) return;\n        const target =\n            $target.getAttribute('data-scroll-to-href') ||\n            $target.getAttribute('href');\n        const offset = $target.getAttribute('data-scroll-to-offset') || 0;\n        const duration =\n            $target.getAttribute('data-scroll-to-duration') ||\n            this.lenisOptions.duration ||\n            defaultLenisOptions.duration;\n\n        target &&\n            this.scrollTo(target, {\n                offset: typeof offset === 'string' ? parseInt(offset) : offset,\n                duration:\n                    typeof duration === 'string'\n                        ? parseInt(duration)\n                        : duration,\n            });\n    }\n\n    /**\n     * Start RequestAnimationFrame that active Lenis smooth and scroll progress.\n     */\n    public start(): void {\n        if (this.rafPlaying) {\n            return;\n        }\n\n        this.rafPlaying = true;\n        this.initCustomTicker\n            ? this.initCustomTicker(this._onRenderBind)\n            : this._raf();\n    }\n\n    /**\n     * Stop RequestAnimationFrame that active Lenis smooth and scroll progress.\n     */\n    public stop(): void {\n        if (!this.rafPlaying) {\n            return;\n        }\n\n        this.rafPlaying = false;\n        this.destroyCustomTicker\n            ? this.destroyCustomTicker(this._onRenderBind)\n            : this.rafInstance && cancelAnimationFrame(this.rafInstance);\n    }\n\n    /**\n     * Remove old scroll elements items and rebuild ScrollElements instances.\n     */\n    public removeScrollElements($oldContainer: HTMLElement): void {\n        if (!$oldContainer) {\n            console.error('Please provide a DOM Element as $oldContainer');\n            return;\n        }\n\n        this._unbindScrollToEvents($oldContainer);\n        this.coreInstance?.removeScrollElements($oldContainer);\n    }\n\n    /**\n     * Add new scroll elements items and rebuild ScrollElements instances.\n     */\n    public addScrollElements($newContainer: HTMLElement): void {\n        if (!$newContainer) {\n            console.error('Please provide a DOM Element as $newContainer');\n            return;\n        }\n\n        this.coreInstance?.addScrollElements($newContainer);\n        requestAnimationFrame(() => {\n            this._bindScrollToEvents($newContainer);\n        });\n    }\n\n    /**\n     * Trigger resize callback.\n     */\n    public resize(): void {\n        this._onResizeBind();\n    }\n\n    /**\n     * Trigger scroll to callback.\n     */\n    public scrollTo(\n        target: lenisTargetScrollTo,\n        options?: ILenisScrollToOptions\n    ): void {\n        this.lenisInstance?.scrollTo(target, {\n            offset: options?.offset,\n            lerp: options?.lerp,\n            duration: options?.duration,\n            immediate: options?.immediate,\n            lock: options?.lock,\n            force: options?.force,\n            easing: options?.easing,\n            onComplete: options?.onComplete,\n        });\n    }\n\n    /**\n     * RequestAnimationFrame that active Lenis smooth and scroll progress.\n     *\n     * @private\n     *\n     */\n    private _raf() {\n        this._onRenderBind();\n        this.rafInstance = requestAnimationFrame(() => this._raf());\n    }\n}\n", "import { module } from 'modujs'\nimport LocomotiveScroll from 'locomotive-scroll'\n\nexport default class extends module {\n    constructor(m) {\n        super(m);\n    }\n\n    init() {\n        this.scroll = new LocomotiveScroll({\n            modularInstance: this,\n        })\n\n        // // Force scroll to top\n        // if (history.scrollRestoration) {\n        //     history.scrollRestoration = 'manual'\n        //     window.scrollTo(0, 0)\n        // }\n    }\n\n    scrollTo(params) {\n        let { target, ...options } = params\n\n        options = Object.assign({\n            // Defaults\n            duration: 1,\n        }, options)\n\n        this.scroll?.scrollTo(target, options)\n    }\n\n    /**\n    * Observe new scroll elements\n    *\n    * @param $newContainer (HTMLElement)\n    */\n    addScrollElements($newContainer) {\n        this.scroll?.addScrollElements($newContainer)\n    }\n\n    /**\n    * Unobserve scroll elements\n    *\n    * @param $oldContainer (HTMLElement)\n    */\n    removeScrollElements($oldContainer) {\n        this.scroll?.removeScrollElements($oldContainer)\n    }\n\n    destroy() {\n        this.scroll.destroy();\n    }\n}\n", "import svg4everybody from 'svg4everybody';\nimport { ENV } from './config';\nimport { triggerLazyloadCallbacks } from './utils/image';\n\n// Dynamic imports for development mode only\nlet gridHelper;\n(async () => {\n    if (ENV.IS_DEV) {\n        const gridHelperModule = await import('./utils/grid-helper');\n        gridHelper = gridHelperModule?.gridHelper;\n    }\n})();\n\nexport default function () {\n    /**\n     * Use external SVG spritemaps\n     */\n    svg4everybody();\n\n    /**\n     * Add grid helper\n     */\n    gridHelper?.();\n\n    /**\n     * Trigger lazyload\n     */\n    triggerLazyloadCallbacks();\n}\n", "/**\n * Creates a debounced function.\n *\n * A debounced function delays invoking `callback` until after\n * `delay` milliseconds have elapsed since the last time the\n * debounced function was invoked.\n *\n * Useful for behaviour that should only happen _before_ or\n * _after_ an event has stopped occurring.\n *\n * @template {function} T\n *\n * @param  {T}       callback    - The function to debounce.\n * @param  {number}  delay       - The number of milliseconds to wait.\n * @param  {boolean} [immediate] -\n *     If `true`, `callback` is invoked before `delay`.\n *     If `false`, `callback` is invoked after `delay`.\n * @return {function<T>} The new debounced function.\n */\n\nconst debounce = (callback, delay, immediate = false) => {\n    let timeout = null\n\n    return (...args) => {\n        clearTimeout(timeout)\n\n        const later = () => {\n            timeout = null\n            if (!immediate) {\n                callback(...args)\n            }\n        }\n\n        if (immediate && !timeout) {\n            callback(...args)\n        }\n\n        timeout = setTimeout(later, delay)\n    }\n}\n\n\n/**\n * Creates a throttled function.\n *\n * A throttled function invokes `callback` at most once per every\n * `delay` milliseconds.\n *\n * Useful for rate-limiting an event that occurs in quick succession.\n *\n * @template {function} T\n *\n * @param  {T}       callback - The function to throttle.\n * @param  {number}  delay    - The number of milliseconds to wait.\n * @return {function<T>} The new throttled function.\n */\n\nconst throttle = (callback, delay) => {\n    let timeout = false\n\n    return (...args) => {\n        if (!timeout) {\n            timeout = true\n\n            callback(...args)\n\n            setTimeout(() => {\n                timeout = false\n            }, delay)\n        }\n    }\n}\n\n\nexport {\n    debounce,\n    throttle\n}\n", "const $html = document.documentElement\nconst $body = document.body\n\nexport {\n    $html,\n    $body,\n}\n", "import modular from 'modujs';\nimport * as modules from './modules';\nimport globals from './globals';\nimport { debounce } from './utils/tickers'\nimport { $html } from './utils/dom';\nimport { ENV, FONT, CUSTOM_EVENT, CSS_CLASS } from './config'\nimport { isFontLoadingAPIAvailable, loadFonts } from './utils/fonts';\n\nconst app = new modular({\n    modules: modules,\n});\n\nwindow.onload = (event) => {\n    const $style = document.getElementById('main-css');\n\n    if ($style) {\n        if ($style.isLoaded) {\n            init();\n        } else {\n            $style.addEventListener('load', (event) => {\n                init();\n            });\n        }\n    } else {\n        console.warn('The \"main-css\" stylesheet not found');\n    }\n};\n\nfunction init() {\n    globals();\n\n    app.init(app);\n\n    $html.classList.add(CSS_CLASS.LOADED);\n    $html.classList.add(CSS_CLASS.READY);\n    $html.classList.remove(CSS_CLASS.LOADING);\n\n    // Bind window resize event with default vars\n    const resizeEndEvent = new CustomEvent(CUSTOM_EVENT.RESIZE_END)\n    window.addEventListener('resize', () => {\n        $html.style.setProperty('--vw', `${document.documentElement.clientWidth * 0.01}px`)\n        debounce(() => {\n            window.dispatchEvent(resizeEndEvent)\n        }, 200, false)\n    })\n\n    /**\n     * Eagerly load the following fonts.\n     */\n    if (isFontLoadingAPIAvailable) {\n        loadFonts(FONT.EAGER, ENV.IS_DEV).then((eagerFonts) => {\n            $html.classList.add(CSS_CLASS.FONTS_LOADED);\n\n            if (ENV.IS_DEV) {\n                console.group('Eager fonts loaded!', eagerFonts.length, '/', document.fonts.size);\n                console.group('State of eager fonts:')\n                eagerFonts.forEach((font) => console.log(font.family, font.style, font.weight, font.status/*, font*/))\n                console.groupEnd()\n                console.group('State of all fonts:')\n                document.fonts.forEach((font) => console.log(font.family, font.style, font.weight, font.status/*, font*/))\n                console.groupEnd()\n            }\n        });\n    }\n}\n"],
  "mappings": "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",
  "names": ["svg4everybody", "requestAnimationFrame", "i", "e", "obj", "i", "o", "n", "_default", "e", "index", "parent", "id", "init", "app", "criterion", "font", "_classCallCheck", "_defineProperties", "i", "_createClass", "_slicedToArray", "_arrayWithHoles", "_iterableToArrayLimit", "_unsupportedIterableToArray", "_nonIterableRest", "o", "_arrayLikeToArray", "n", "_default", "init", "e", "main_esm_default", "s", "i", "e", "main_esm_default", "clamp", "min", "input", "max", "Math", "Animate", "advance", "deltaTime", "_this$onUpdate", "this", "isRunning", "completed", "lerp", "value", "amt", "to", "round", "currentTime", "linearProgress", "duration", "easedProgress", "easing", "from", "onUpdate", "call", "stop", "fromTo", "t", "debounce", "callback", "delay", "timer", "args", "arguments", "context", "clearTimeout", "setTimeout", "apply", "Dimensions", "constructor", "wrapper", "content", "onWindowResize", "width", "window", "innerWidth", "height", "innerHeight", "onWrapperResize", "clientWidth", "clientHeight", "onContentResize", "element", "document", "documentElement", "scrollHeight", "scrollWidth", "addEventListener", "wrapperResizeObserver", "ResizeObserver", "observe", "contentResizeObserver", "destroy", "_this$wrapperResizeOb", "_this$contentResizeOb", "removeEventListener", "disconnect", "limit", "x", "y", "createNanoEvents", "events", "emit", "event", "callbacks", "i", "length", "on", "cb", "_this$events$event", "push", "_this$events$event2", "filter", "VirtualScroll", "wheelMultiplier", "touchMultiplier", "normalizeWheel", "onTouchStart", "clientX", "clientY", "targetTouches", "touchStart", "lastDelta", "onTouchMove", "deltaX", "deltaY", "emitter", "type", "onTouchEnd", "inertia", "onWheel", "passive", "Lenis", "direction", "gestureDirection", "mouseMultiplier", "smooth", "wheelEventsTarget", "smoothWheel", "smoothTouch", "syncTouch", "syncTouchLerp", "touchInertiaMultiplier", "pow", "infinite", "orientation", "gestureOrientation", "onVirtualScroll", "ctrlKey", "isTouch", "isWheel", "options", "scroll", "composedPath", "find", "node", "hasAttribute", "isStopped", "isLocked", "preventDefault", "isSmooth", "isScrolling", "animate", "delta", "abs", "hasTouchInertia", "velocity", "scrollTo", "targetScroll", "_extends", "programmatic", "onScroll", "lastScroll", "animatedScroll", "actualScroll", "sign", "console", "warn", "lenisVersion", "body", "dimensions", "rootElement", "classList", "add", "virtualScroll", "off", "_this$emitter$events$", "setScroll", "isHorizontal", "scrollLeft", "scrollTop", "reset", "start", "raf", "time", "target", "offset", "immediate", "lock", "onComplete", "force", "includes", "_target", "querySelector", "nodeType", "wrapperRect", "getBoundingClientRect", "left", "top", "rect", "requestAnimationFrame", "dividend", "divisor", "remainder", "progress", "__isSmooth", "toggle", "__isScrolling", "__isStopped", "IO", "constructor", "scrollElements", "rootMargin", "IORaf", "observer", "_init", "observerOptions", "onIntersect", "entries", "forEach", "entry", "$targetItem", "find", "item", "$el", "target", "isIntersecting", "isAlreadyIntersected", "_setInview", "_setOutOfView", "IntersectionObserver", "scrollElement", "$scrollElement", "observe", "destroy", "disconnect", "unobserve", "setInteractivityOn", "setInview", "setInteractivityOff", "setOutOfView", "attributes", "scrollRepeat", "clamp", "min", "max", "value", "mapRange", "inMin", "inMax", "outMin", "outMax", "inRange", "outRange", "normalize", "closestNumber", "array", "reduce", "prev", "curr", "Math", "abs", "INVIEW_CLASS", "PROGRESS_CSS_VAR", "PROGRESS_MODULAR_METHOD", "ScrollElement", "id", "modularInstance", "subscribeElementUpdateFn", "unsubscribeElementUpdateFn", "needRaf", "scrollOrientation", "_this$$el$dataset$scr", "_this$$el$dataset$scr2", "_this$$el$dataset$scr3", "_this$$el$dataset$scr4", "_this$$el$dataset$scr5", "intersection", "metrics", "currentScroll", "translateValue", "progress", "lastProgress", "progressModularModules", "isInview", "isInteractive", "isInFold", "isFirstResize", "scrollClass", "dataset", "scrollOffset", "scrollPosition", "scrollModuleProgress", "scrollCssProgress", "scrollEventProgress", "scrollSpeed", "parseFloat", "scrollCall", "scrollCallSelf", "scrollIgnoreFold", "scrollEnableTouchSpeed", "start", "end", "offsetStart", "offsetEnd", "bcr", "window", "scrollY", "scrollX", "_getProgressModularModules", "_resize", "onResize", "onRender", "smooth", "wSize", "innerHeight", "innerWidth", "_computeProgress", "isNaN", "style", "transform", "classList", "add", "way", "from", "_getScrollCallFrom", "_dispatchCall", "remove", "getBoundingClientRect", "_computeMetrics", "_computeIntersection", "top", "left", "height", "width", "metricsStart", "metricsSize", "offset", "split", "undefined", "trim", "scrollPositionStart", "scrollPositionEnd", "viewportStart", "includes", "parseInt", "replace", "viewportEnd", "forcedProgress", "_setCssProgress", "_setCustomEventProgress", "modularModules", "call", "moduleName", "moduleId", "currentProgress", "setProperty", "toString", "customEventName", "customEvent", "CustomEvent", "detail", "dispatchEvent", "modulesIdNames", "Object", "keys", "filter", "key", "modules", "length", "modulesIdName", "module", "moduleObj", "push", "closestIntersectionValue", "_this$attributes$scro", "_this$attributes", "callParameters", "callSelf", "_targetModuleId", "func", "targetModuleId", "ATTRIBUTES_THAT_NEED_RAF", "TRIGGER_ROOT_MARGIN", "RAF_ROOT_MARGIN", "Core", "triggerRootMargin", "rafRootMargin", "$scrollContainer", "triggeredScrollElements", "RAFScrollElements", "scrollElementsToUpdate", "IOTriggerInstance", "IORafInstance", "console", "error", "$scrollElements", "querySelectorAll", "$scrollElementsArr", "Array", "_subscribeScrollElements", "_unsubscribeAllScrollElements", "removeScrollElements", "$oldContainer", "$scrollElementsToRemove", "index", "$scrollElementsToRemoveArr", "indexOf", "splice", "targetScrollElementToUpdate", "targetScrollElement", "_unsubscribeElementUpdate", "scrollElementItem", "addScrollElements", "$newContainer", "ids", "maxID", "fromIndex", "toObserve", "_checkRafNeeded", "scrollElementInstance", "_subscribeElementUpdate", "bind", "scrollElementToUpdate", "attributesThatNeedRaf", "removeAttribute", "attributeToRemove", "attribute", "map", "test", "join", "RO", "resizeElements", "resizeCallback", "$resizeElements", "isFirstObserve", "_this$resizeCallback", "ResizeObserver", "$resizeElement", "defaultLenisOptions", "wrapper", "content", "document", "documentElement", "lerp", "duration", "orientation", "gestureOrientation", "smoothWheel", "smoothTouch", "wheelMultiplier", "touchMultiplier", "normalizeWheel", "easing", "t", "pow", "LocomotiveScroll", "lenisOptions", "autoResize", "autoStart", "scrollCallback", "initCustomTicker", "destroyCustomTicker", "rafPlaying", "lenisInstance", "coreInstance", "rafInstance", "ROInstance", "_onRenderBind", "_onResizeBind", "_onScrollToBind", "_extends", "assign", "_onRender", "_onScrollTo", "_onResize", "_this$lenisInstance", "Lenis", "on", "setAttribute", "options", "requestAnimationFrame", "rootElement", "_bindEvents", "warn", "stop", "_unbindEvents", "_bindScrollToEvents", "body", "addEventListener", "_unbindScrollToEvents", "removeEventListener", "$container", "$rootContainer", "$scrollToElements", "_this$coreInstance", "scroll", "_this$lenisInstance2", "_this$coreInstance2", "raf", "Date", "now", "isSmooth", "event", "_event$currentTarget", "preventDefault", "$target", "currentTarget", "getAttribute", "scrollTo", "_raf", "cancelAnimationFrame", "_this$coreInstance3", "_this$coreInstance4", "resize", "_this$lenisInstance3", "immediate", "lock", "force", "onComplete", "gridHelper", "svg4everybody", "event"]
}
